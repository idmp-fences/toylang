program     =  _{ SOI ~ init* ~ thread* ~ final ~ EOI }
thread      =  { "thread" ~ name ~ "{" ~ stmt* ~ "}" }
stmt        =  {
    modify
  | assign
  | fence
  | if
  | while
}
stmts  = { stmt* }
modify = { name ~ "=" ~ expr ~ ";" }
fence  = { "Fence" ~ "(" ~ fencemarker ~ ")" ~ ";" }
assign = { "let" ~ name ~ ":" ~ "u32" ~ "=" ~ expr ~ ";" }
if     = { "if" ~ "(" ~ condexpr ~ ")" ~ "{" ~ stmts ~ "}" ~ "else" ~ "{" ~ stmts ~ "}" }
while  = { "while" ~ "(" ~ condexpr ~ ")" ~ "{" ~ stmt* ~ "}" }

init        =  { assign }
final       =  { "final" ~ "{" ~ assert* ~ "}" }
expr        =  { name | num }
fencemarker =  { "WR" | "WW" | "RW" | "RR" }

assert      =  { "assert" ~ "(" ~ logicexpr ~ ")" ~ ";" }

condatom = {
    condneg
  | condparen
  | condeq
}

condneg = { "!" ~ condexpr }
condparen = { "(" ~ condexpr ~ ")" }
condeq = { expr ~ "==" ~ expr }

// '&&' has lowest precedence
condexpr = { condatom ~ ("&&" ~ condatom)* }

logicatom  =  {
    logicneg
  | logicparen
  | logiceq
}
logicneg = { "!" ~ logicexpr }
logicparen = { "(" ~ logicexpr ~ ")" }
logiceq = { logicint ~ "==" ~ logicint }

// '&&' has lowest precedence
logicexpr = { logicatom ~ ("&&" ~ logicatom)* }

logicint    =  { logicvar | num }
logicvar    = @{ name ~ "." ~ name }
name        = @{ ASCII_ALPHA ~ ASCII_ALPHANUMERIC* }
num         = @{ ASCII_DIGIT+ }
WHITESPACE  = _{ " " | NEWLINE }

// do not consume newline at end of a comment
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }
