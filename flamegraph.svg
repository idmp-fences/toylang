<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="7029"><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.0000%" y="437" width="0.0142%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.0000%" y="421" width="0.0142%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.01%)</title><rect x="0.0000%" y="405" width="0.0142%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>ntdll`NtTraceControl (1 samples, 0.01%)</title><rect x="0.0000%" y="389" width="0.0142%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (1 samples, 0.01%)</title><rect x="0.0142%" y="437" width="0.0142%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2642%" y="447.50"></text></g><g><title>ntdll`RtlInitCodePageTable (1 samples, 0.01%)</title><rect x="0.0142%" y="421" width="0.0142%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2642%" y="431.50"></text></g><g><title>ntdll`ZwGetNlsSectionPtr (1 samples, 0.01%)</title><rect x="0.0142%" y="405" width="0.0142%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2642%" y="415.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (3 samples, 0.04%)</title><rect x="0.0285%" y="325" width="0.0427%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="3"/><text x="0.2785%" y="335.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.0711%" y="325" width="0.0142%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="0.3211%" y="335.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.01%)</title><rect x="0.0854%" y="293" width="0.0142%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3354%" y="303.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.01%)</title><rect x="0.0854%" y="277" width="0.0142%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3354%" y="287.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.0854%" y="261" width="0.0142%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3354%" y="271.50"></text></g><g><title>ntdll`RtlIsProcessorFeaturePresent (1 samples, 0.01%)</title><rect x="0.0854%" y="245" width="0.0142%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3354%" y="255.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.01%)</title><rect x="0.0854%" y="229" width="0.0142%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3354%" y="239.50"></text></g><g><title>ntdll`RtlReleasePath (1 samples, 0.01%)</title><rect x="0.0854%" y="213" width="0.0142%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3354%" y="223.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="0.0854%" y="197" width="0.0142%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3354%" y="207.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (6 samples, 0.09%)</title><rect x="0.0285%" y="389" width="0.0854%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="6"/><text x="0.2785%" y="399.50"></text></g><g><title>ntdll`LdrAddRefDll (6 samples, 0.09%)</title><rect x="0.0285%" y="373" width="0.0854%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="6"/><text x="0.2785%" y="383.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (6 samples, 0.09%)</title><rect x="0.0285%" y="357" width="0.0854%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="6"/><text x="0.2785%" y="367.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (6 samples, 0.09%)</title><rect x="0.0285%" y="341" width="0.0854%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="6"/><text x="0.2785%" y="351.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 0.03%)</title><rect x="0.0854%" y="325" width="0.0285%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="2"/><text x="0.3354%" y="335.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (2 samples, 0.03%)</title><rect x="0.0854%" y="309" width="0.0285%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="2"/><text x="0.3354%" y="319.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="0.0996%" y="293" width="0.0142%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="0.3496%" y="303.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.01%)</title><rect x="0.0996%" y="277" width="0.0142%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.3496%" y="287.50"></text></g><g><title>ntdll`RtlCompareUnicodeStrings (1 samples, 0.01%)</title><rect x="0.0996%" y="261" width="0.0142%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.3496%" y="271.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.01%)</title><rect x="0.1138%" y="341" width="0.0142%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="0.3638%" y="351.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.01%)</title><rect x="0.1138%" y="325" width="0.0142%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="0.3638%" y="335.50"></text></g><g><title>kernel32`ClosePrivateNamespace (1 samples, 0.01%)</title><rect x="0.1138%" y="309" width="0.0142%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="0.3638%" y="319.50"></text></g><g><title>KernelBase`GetProcessMemoryInfo (1 samples, 0.01%)</title><rect x="0.1280%" y="277" width="0.0142%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="0.3780%" y="287.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.1280%" y="261" width="0.0142%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="0.3780%" y="271.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.1280%" y="245" width="0.0142%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="0.3780%" y="255.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.1280%" y="229" width="0.0142%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="1"/><text x="0.3780%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.1280%" y="213" width="0.0142%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="0.3780%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.1280%" y="197" width="0.0142%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="0.3780%" y="207.50"></text></g><g><title>KernelBase`PathIsFileSpecW (1 samples, 0.01%)</title><rect x="0.1423%" y="277" width="0.0142%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="0.3923%" y="287.50"></text></g><g><title>KernelBase`PathIsFileSpecW (1 samples, 0.01%)</title><rect x="0.1423%" y="261" width="0.0142%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="0.3923%" y="271.50"></text></g><g><title>ntdll`NtCreateFile (1 samples, 0.01%)</title><rect x="0.1423%" y="245" width="0.0142%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="0.3923%" y="255.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="0.1565%" y="277" width="0.0142%" height="15" fill="rgb(245,192,40)" fg:x="11" fg:w="1"/><text x="0.4065%" y="287.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1565%" y="261" width="0.0142%" height="15" fill="rgb(238,167,29)" fg:x="11" fg:w="1"/><text x="0.4065%" y="271.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1565%" y="245" width="0.0142%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="1"/><text x="0.4065%" y="255.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1565%" y="229" width="0.0142%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="0.4065%" y="239.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1565%" y="213" width="0.0142%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="1"/><text x="0.4065%" y="223.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1565%" y="197" width="0.0142%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="1"/><text x="0.4065%" y="207.50"></text></g><g><title>KernelBase`StrCmpLogicalW (1 samples, 0.01%)</title><rect x="0.1565%" y="181" width="0.0142%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="1"/><text x="0.4065%" y="191.50"></text></g><g><title>KernelBase`StrCmpLogicalW (1 samples, 0.01%)</title><rect x="0.1565%" y="165" width="0.0142%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="1"/><text x="0.4065%" y="175.50"></text></g><g><title>KernelBase`ReOpenFile (1 samples, 0.01%)</title><rect x="0.1565%" y="149" width="0.0142%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="1"/><text x="0.4065%" y="159.50"></text></g><g><title>KernelBase`CharNextExA (1 samples, 0.01%)</title><rect x="0.1565%" y="133" width="0.0142%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="1"/><text x="0.4065%" y="143.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.1565%" y="117" width="0.0142%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="1"/><text x="0.4065%" y="127.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.1565%" y="101" width="0.0142%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="0.4065%" y="111.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.1565%" y="85" width="0.0142%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="0.4065%" y="95.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.1565%" y="69" width="0.0142%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="0.4065%" y="79.50"></text></g><g><title>ntdll`RtlQueryFeatureConfiguration (1 samples, 0.01%)</title><rect x="0.1565%" y="53" width="0.0142%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="0.4065%" y="63.50"></text></g><g><title>ntdll`NtMapViewOfSection (1 samples, 0.01%)</title><rect x="0.1565%" y="37" width="0.0142%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="0.4065%" y="47.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.07%)</title><rect x="0.1138%" y="373" width="0.0711%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="5"/><text x="0.3638%" y="383.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (5 samples, 0.07%)</title><rect x="0.1138%" y="357" width="0.0711%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="5"/><text x="0.3638%" y="367.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (4 samples, 0.06%)</title><rect x="0.1280%" y="341" width="0.0569%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="4"/><text x="0.3780%" y="351.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (4 samples, 0.06%)</title><rect x="0.1280%" y="325" width="0.0569%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="4"/><text x="0.3780%" y="335.50"></text></g><g><title>KernelBase`TestCreate (4 samples, 0.06%)</title><rect x="0.1280%" y="309" width="0.0569%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="4"/><text x="0.3780%" y="319.50"></text></g><g><title>KernelBase`TestCreate (4 samples, 0.06%)</title><rect x="0.1280%" y="293" width="0.0569%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="4"/><text x="0.3780%" y="303.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="0.1707%" y="277" width="0.0142%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="0.4207%" y="287.50"></text></g><g><title>KernelBase`GetCPHashNode (1 samples, 0.01%)</title><rect x="0.1707%" y="261" width="0.0142%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="0.4207%" y="271.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="0.1707%" y="245" width="0.0142%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="0.4207%" y="255.50"></text></g><g><title>KernelBase`GetCurrentProcessId (1 samples, 0.01%)</title><rect x="0.1707%" y="229" width="0.0142%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="0.4207%" y="239.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="0.1707%" y="213" width="0.0142%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="0.4207%" y="223.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (1 samples, 0.01%)</title><rect x="0.1707%" y="197" width="0.0142%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="0.4207%" y="207.50"></text></g><g><title>KernelBase`Wow64SetThreadDefaultGuestMachine (1 samples, 0.01%)</title><rect x="0.1707%" y="181" width="0.0142%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="0.4207%" y="191.50"></text></g><g><title>KernelBase`Wow64SetThreadDefaultGuestMachine (1 samples, 0.01%)</title><rect x="0.1707%" y="165" width="0.0142%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="0.4207%" y="175.50"></text></g><g><title>KernelBase`GetModuleHandleW (1 samples, 0.01%)</title><rect x="0.1707%" y="149" width="0.0142%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="0.4207%" y="159.50"></text></g><g><title>ntdll`LdrGetDllHandle (1 samples, 0.01%)</title><rect x="0.1707%" y="133" width="0.0142%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="0.4207%" y="143.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (1 samples, 0.01%)</title><rect x="0.1707%" y="117" width="0.0142%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="0.4207%" y="127.50"></text></g><g><title>ntdll`RtlDeriveCapabilitySidsFromName (1 samples, 0.01%)</title><rect x="0.1707%" y="101" width="0.0142%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="0.4207%" y="111.50"></text></g><g><title>ntdll`LdrLoadDll (12 samples, 0.17%)</title><rect x="0.0285%" y="437" width="0.1707%" height="15" fill="rgb(244,35,45)" fg:x="2" fg:w="12"/><text x="0.2785%" y="447.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (12 samples, 0.17%)</title><rect x="0.0285%" y="421" width="0.1707%" height="15" fill="rgb(251,115,12)" fg:x="2" fg:w="12"/><text x="0.2785%" y="431.50"></text></g><g><title>ntdll`RtlImageRvaToSection (12 samples, 0.17%)</title><rect x="0.0285%" y="405" width="0.1707%" height="15" fill="rgb(240,54,50)" fg:x="2" fg:w="12"/><text x="0.2785%" y="415.50"></text></g><g><title>ntdll`RtlCopyUnicodeString (6 samples, 0.09%)</title><rect x="0.1138%" y="389" width="0.0854%" height="15" fill="rgb(233,84,52)" fg:x="8" fg:w="6"/><text x="0.3638%" y="399.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.01%)</title><rect x="0.1849%" y="373" width="0.0142%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="1"/><text x="0.4349%" y="383.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.01%)</title><rect x="0.1849%" y="357" width="0.0142%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="1"/><text x="0.4349%" y="367.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.01%)</title><rect x="0.1849%" y="341" width="0.0142%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="1"/><text x="0.4349%" y="351.50"></text></g><g><title>ntdll`RtlDeactivateActivationContext (1 samples, 0.01%)</title><rect x="0.1849%" y="325" width="0.0142%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="1"/><text x="0.4349%" y="335.50"></text></g><g><title>ntdll`ZwApphelpCacheControl (1 samples, 0.01%)</title><rect x="0.1849%" y="309" width="0.0142%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="1"/><text x="0.4349%" y="319.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.01%)</title><rect x="0.1992%" y="437" width="0.0142%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="1"/><text x="0.4492%" y="447.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.01%)</title><rect x="0.1992%" y="421" width="0.0142%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="1"/><text x="0.4492%" y="431.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable_U (1 samples, 0.01%)</title><rect x="0.1992%" y="405" width="0.0142%" height="15" fill="rgb(211,81,21)" fg:x="14" fg:w="1"/><text x="0.4492%" y="415.50"></text></g><g><title>ntdll`RtlQueryEnvironmentVariable (1 samples, 0.01%)</title><rect x="0.1992%" y="389" width="0.0142%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="1"/><text x="0.4492%" y="399.50"></text></g><g><title>ntdll`RtlCreateEnvironmentEx (1 samples, 0.01%)</title><rect x="0.1992%" y="373" width="0.0142%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="1"/><text x="0.4492%" y="383.50"></text></g><g><title>advapi32`RegDeleteKeyExW (1 samples, 0.01%)</title><rect x="0.2134%" y="373" width="0.0142%" height="15" fill="rgb(237,122,38)" fg:x="15" fg:w="1"/><text x="0.4634%" y="383.50"></text></g><g><title>advapi32`RegDeleteKeyExW (1 samples, 0.01%)</title><rect x="0.2134%" y="357" width="0.0142%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="1"/><text x="0.4634%" y="367.50"></text></g><g><title>advapi32`IdentifyCodeAuthzLevelW (1 samples, 0.01%)</title><rect x="0.2134%" y="341" width="0.0142%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="1"/><text x="0.4634%" y="351.50"></text></g><g><title>bcrypt`BCryptRegisterConfigChangeNotify (1 samples, 0.01%)</title><rect x="0.2276%" y="373" width="0.0142%" height="15" fill="rgb(210,16,53)" fg:x="16" fg:w="1"/><text x="0.4776%" y="383.50"></text></g><g><title>bcrypt`BCryptDestroyHash (1 samples, 0.01%)</title><rect x="0.2276%" y="357" width="0.0142%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="1"/><text x="0.4776%" y="367.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.01%)</title><rect x="0.2276%" y="341" width="0.0142%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="1"/><text x="0.4776%" y="351.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.01%)</title><rect x="0.2276%" y="325" width="0.0142%" height="15" fill="rgb(250,166,2)" fg:x="16" fg:w="1"/><text x="0.4776%" y="335.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.2276%" y="309" width="0.0142%" height="15" fill="rgb(242,216,29)" fg:x="16" fg:w="1"/><text x="0.4776%" y="319.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.01%)</title><rect x="0.2276%" y="293" width="0.0142%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="0.4776%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.2276%" y="277" width="0.0142%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="0.4776%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.2276%" y="261" width="0.0142%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="0.4776%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.2276%" y="245" width="0.0142%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="1"/><text x="0.4776%" y="255.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.2276%" y="229" width="0.0142%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="0.4776%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.2276%" y="213" width="0.0142%" height="15" fill="rgb(233,208,19)" fg:x="16" fg:w="1"/><text x="0.4776%" y="223.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.2276%" y="197" width="0.0142%" height="15" fill="rgb(216,164,2)" fg:x="16" fg:w="1"/><text x="0.4776%" y="207.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (3 samples, 0.04%)</title><rect x="0.2134%" y="389" width="0.0427%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="3"/><text x="0.4634%" y="399.50"></text></g><g><title>vcruntime140`_CxxFrameHandler3 (1 samples, 0.01%)</title><rect x="0.2419%" y="373" width="0.0142%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="0.4919%" y="383.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.01%)</title><rect x="0.2419%" y="357" width="0.0142%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="0.4919%" y="367.50"></text></g><g><title>vcruntime140`set_se_translator (1 samples, 0.01%)</title><rect x="0.2419%" y="341" width="0.0142%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="1"/><text x="0.4919%" y="351.50"></text></g><g><title>vcruntime140`_vcrt_InitializeCriticalSectionEx (1 samples, 0.01%)</title><rect x="0.2419%" y="325" width="0.0142%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="1"/><text x="0.4919%" y="335.50"></text></g><g><title>vcruntime140`_intrinsic_setjmpex (1 samples, 0.01%)</title><rect x="0.2419%" y="309" width="0.0142%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="1"/><text x="0.4919%" y="319.50"></text></g><g><title>msvcrt`_wgetmainargs (1 samples, 0.01%)</title><rect x="0.2561%" y="341" width="0.0142%" height="15" fill="rgb(232,23,21)" fg:x="18" fg:w="1"/><text x="0.5061%" y="351.50"></text></g><g><title>msvcrt`get_heap_handle (1 samples, 0.01%)</title><rect x="0.2561%" y="325" width="0.0142%" height="15" fill="rgb(244,5,23)" fg:x="18" fg:w="1"/><text x="0.5061%" y="335.50"></text></g><g><title>KernelBase`HeapCreate (1 samples, 0.01%)</title><rect x="0.2561%" y="309" width="0.0142%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="1"/><text x="0.5061%" y="319.50"></text></g><g><title>ntdll`RtlCreateHeap (1 samples, 0.01%)</title><rect x="0.2561%" y="293" width="0.0142%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="1"/><text x="0.5061%" y="303.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (1 samples, 0.01%)</title><rect x="0.2561%" y="277" width="0.0142%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="1"/><text x="0.5061%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.2561%" y="261" width="0.0142%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="1"/><text x="0.5061%" y="271.50"></text></g><g><title>msvcrt`cexit (1 samples, 0.01%)</title><rect x="0.2703%" y="341" width="0.0142%" height="15" fill="rgb(223,113,26)" fg:x="19" fg:w="1"/><text x="0.5203%" y="351.50"></text></g><g><title>msvcrt`asctime_s (1 samples, 0.01%)</title><rect x="0.2703%" y="325" width="0.0142%" height="15" fill="rgb(206,192,2)" fg:x="19" fg:w="1"/><text x="0.5203%" y="335.50"></text></g><g><title>msvcrt`wfindnexti64 (3 samples, 0.04%)</title><rect x="0.2561%" y="357" width="0.0427%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="3"/><text x="0.5061%" y="367.50"></text></g><g><title>msvcrt`write (1 samples, 0.01%)</title><rect x="0.2845%" y="341" width="0.0142%" height="15" fill="rgb(247,173,49)" fg:x="20" fg:w="1"/><text x="0.5345%" y="351.50"></text></g><g><title>msvcrt`setmbcp (1 samples, 0.01%)</title><rect x="0.2845%" y="325" width="0.0142%" height="15" fill="rgb(224,114,35)" fg:x="20" fg:w="1"/><text x="0.5345%" y="335.50"></text></g><g><title>msvcrt`realloc (1 samples, 0.01%)</title><rect x="0.2845%" y="309" width="0.0142%" height="15" fill="rgb(245,159,27)" fg:x="20" fg:w="1"/><text x="0.5345%" y="319.50"></text></g><g><title>msvcrt`malloc (1 samples, 0.01%)</title><rect x="0.2845%" y="293" width="0.0142%" height="15" fill="rgb(245,172,44)" fg:x="20" fg:w="1"/><text x="0.5345%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.2845%" y="277" width="0.0142%" height="15" fill="rgb(236,23,11)" fg:x="20" fg:w="1"/><text x="0.5345%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="0.2845%" y="261" width="0.0142%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="1"/><text x="0.5345%" y="271.50"></text></g><g><title>ntdll`RtlGetNtProductType (1 samples, 0.01%)</title><rect x="0.2845%" y="245" width="0.0142%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="1"/><text x="0.5345%" y="255.50"></text></g><g><title>ntdll`RtlDestroyHeap (1 samples, 0.01%)</title><rect x="0.2845%" y="229" width="0.0142%" height="15" fill="rgb(244,70,9)" fg:x="20" fg:w="1"/><text x="0.5345%" y="239.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.01%)</title><rect x="0.2845%" y="213" width="0.0142%" height="15" fill="rgb(217,125,39)" fg:x="20" fg:w="1"/><text x="0.5345%" y="223.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.01%)</title><rect x="0.2845%" y="197" width="0.0142%" height="15" fill="rgb(235,36,10)" fg:x="20" fg:w="1"/><text x="0.5345%" y="207.50"></text></g><g><title>ntdll`RtlRunOnceExecuteOnce (1 samples, 0.01%)</title><rect x="0.2845%" y="181" width="0.0142%" height="15" fill="rgb(251,123,47)" fg:x="20" fg:w="1"/><text x="0.5345%" y="191.50"></text></g><g><title>ntdll`RtlGetGroupSecurityDescriptor (1 samples, 0.01%)</title><rect x="0.2845%" y="165" width="0.0142%" height="15" fill="rgb(221,13,13)" fg:x="20" fg:w="1"/><text x="0.5345%" y="175.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.01%)</title><rect x="0.2845%" y="149" width="0.0142%" height="15" fill="rgb(238,131,9)" fg:x="20" fg:w="1"/><text x="0.5345%" y="159.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (7 samples, 0.10%)</title><rect x="0.2134%" y="437" width="0.0996%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="7"/><text x="0.4634%" y="447.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (7 samples, 0.10%)</title><rect x="0.2134%" y="421" width="0.0996%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="7"/><text x="0.4634%" y="431.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (7 samples, 0.10%)</title><rect x="0.2134%" y="405" width="0.0996%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="7"/><text x="0.4634%" y="415.50"></text></g><g><title>ntdll`RtlEnumerateEntryHashTable (4 samples, 0.06%)</title><rect x="0.2561%" y="389" width="0.0569%" height="15" fill="rgb(246,228,12)" fg:x="18" fg:w="4"/><text x="0.5061%" y="399.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (4 samples, 0.06%)</title><rect x="0.2561%" y="373" width="0.0569%" height="15" fill="rgb(213,55,15)" fg:x="18" fg:w="4"/><text x="0.5061%" y="383.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.01%)</title><rect x="0.2988%" y="357" width="0.0142%" height="15" fill="rgb(209,9,3)" fg:x="21" fg:w="1"/><text x="0.5488%" y="367.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.01%)</title><rect x="0.2988%" y="341" width="0.0142%" height="15" fill="rgb(230,59,30)" fg:x="21" fg:w="1"/><text x="0.5488%" y="351.50"></text></g><g><title>ucrtbase`Gettnames (1 samples, 0.01%)</title><rect x="0.2988%" y="325" width="0.0142%" height="15" fill="rgb(209,121,21)" fg:x="21" fg:w="1"/><text x="0.5488%" y="335.50"></text></g><g><title>ucrtbase`Gettnames (1 samples, 0.01%)</title><rect x="0.2988%" y="309" width="0.0142%" height="15" fill="rgb(220,109,13)" fg:x="21" fg:w="1"/><text x="0.5488%" y="319.50"></text></g><g><title>ucrtbase`malloc_base (1 samples, 0.01%)</title><rect x="0.2988%" y="293" width="0.0142%" height="15" fill="rgb(232,18,1)" fg:x="21" fg:w="1"/><text x="0.5488%" y="303.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.01%)</title><rect x="0.3130%" y="437" width="0.0142%" height="15" fill="rgb(215,41,42)" fg:x="22" fg:w="1"/><text x="0.5630%" y="447.50"></text></g><g><title>ntdll`RtlGetCurrentDirectory_U (1 samples, 0.01%)</title><rect x="0.3130%" y="421" width="0.0142%" height="15" fill="rgb(224,123,36)" fg:x="22" fg:w="1"/><text x="0.5630%" y="431.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.01%)</title><rect x="0.3130%" y="405" width="0.0142%" height="15" fill="rgb(240,125,3)" fg:x="22" fg:w="1"/><text x="0.5630%" y="415.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.01%)</title><rect x="0.3272%" y="357" width="0.0142%" height="15" fill="rgb(205,98,50)" fg:x="23" fg:w="1"/><text x="0.5772%" y="367.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.01%)</title><rect x="0.3272%" y="341" width="0.0142%" height="15" fill="rgb(205,185,37)" fg:x="23" fg:w="1"/><text x="0.5772%" y="351.50"></text></g><g><title>ntdll`NtMapViewOfSection (1 samples, 0.01%)</title><rect x="0.3272%" y="325" width="0.0142%" height="15" fill="rgb(238,207,15)" fg:x="23" fg:w="1"/><text x="0.5772%" y="335.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.01%)</title><rect x="0.3699%" y="277" width="0.0142%" height="15" fill="rgb(213,199,42)" fg:x="26" fg:w="1"/><text x="0.6199%" y="287.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (1 samples, 0.01%)</title><rect x="0.3699%" y="261" width="0.0142%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="1"/><text x="0.6199%" y="271.50"></text></g><g><title>ntdll`NtMapViewOfSection (1 samples, 0.01%)</title><rect x="0.3699%" y="245" width="0.0142%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="1"/><text x="0.6199%" y="255.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.3841%" y="277" width="0.0142%" height="15" fill="rgb(241,35,35)" fg:x="27" fg:w="1"/><text x="0.6341%" y="287.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.3841%" y="261" width="0.0142%" height="15" fill="rgb(243,32,47)" fg:x="27" fg:w="1"/><text x="0.6341%" y="271.50"></text></g><g><title>ntdll`LdrAddRefDll (3 samples, 0.04%)</title><rect x="0.3699%" y="309" width="0.0427%" height="15" fill="rgb(247,202,23)" fg:x="26" fg:w="3"/><text x="0.6199%" y="319.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (3 samples, 0.04%)</title><rect x="0.3699%" y="293" width="0.0427%" height="15" fill="rgb(219,102,11)" fg:x="26" fg:w="3"/><text x="0.6199%" y="303.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.01%)</title><rect x="0.3983%" y="277" width="0.0142%" height="15" fill="rgb(243,110,44)" fg:x="28" fg:w="1"/><text x="0.6483%" y="287.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (6 samples, 0.09%)</title><rect x="0.3414%" y="341" width="0.0854%" height="15" fill="rgb(222,74,54)" fg:x="24" fg:w="6"/><text x="0.5914%" y="351.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (6 samples, 0.09%)</title><rect x="0.3414%" y="325" width="0.0854%" height="15" fill="rgb(216,99,12)" fg:x="24" fg:w="6"/><text x="0.5914%" y="335.50"></text></g><g><title>ntdll`RtlDosApplyFileIsolationRedirection_Ustr (1 samples, 0.01%)</title><rect x="0.4126%" y="309" width="0.0142%" height="15" fill="rgb(226,22,26)" fg:x="29" fg:w="1"/><text x="0.6626%" y="319.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (8 samples, 0.11%)</title><rect x="0.3272%" y="437" width="0.1138%" height="15" fill="rgb(217,163,10)" fg:x="23" fg:w="8"/><text x="0.5772%" y="447.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (8 samples, 0.11%)</title><rect x="0.3272%" y="421" width="0.1138%" height="15" fill="rgb(213,25,53)" fg:x="23" fg:w="8"/><text x="0.5772%" y="431.50"></text></g><g><title>ntdll`RtlAnsiStringToUnicodeString (8 samples, 0.11%)</title><rect x="0.3272%" y="405" width="0.1138%" height="15" fill="rgb(252,105,26)" fg:x="23" fg:w="8"/><text x="0.5772%" y="415.50"></text></g><g><title>ntdll`LdrAddRefDll (8 samples, 0.11%)</title><rect x="0.3272%" y="389" width="0.1138%" height="15" fill="rgb(220,39,43)" fg:x="23" fg:w="8"/><text x="0.5772%" y="399.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (8 samples, 0.11%)</title><rect x="0.3272%" y="373" width="0.1138%" height="15" fill="rgb(229,68,48)" fg:x="23" fg:w="8"/><text x="0.5772%" y="383.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (7 samples, 0.10%)</title><rect x="0.3414%" y="357" width="0.0996%" height="15" fill="rgb(252,8,32)" fg:x="24" fg:w="7"/><text x="0.5914%" y="367.50"></text></g><g><title>ntdll`RtlInterlockedFlushSList (1 samples, 0.01%)</title><rect x="0.4268%" y="341" width="0.0142%" height="15" fill="rgb(223,20,43)" fg:x="30" fg:w="1"/><text x="0.6768%" y="351.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.01%)</title><rect x="0.4268%" y="325" width="0.0142%" height="15" fill="rgb(229,81,49)" fg:x="30" fg:w="1"/><text x="0.6768%" y="335.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.01%)</title><rect x="0.4268%" y="309" width="0.0142%" height="15" fill="rgb(236,28,36)" fg:x="30" fg:w="1"/><text x="0.6768%" y="319.50"></text></g><g><title>ntdll`ZwReleaseWorkerFactoryWorker (1 samples, 0.01%)</title><rect x="0.4268%" y="293" width="0.0142%" height="15" fill="rgb(249,185,26)" fg:x="30" fg:w="1"/><text x="0.6768%" y="303.50"></text></g><g><title>ntdll`RtlIsMultiSessionSku (1 samples, 0.01%)</title><rect x="0.4410%" y="437" width="0.0142%" height="15" fill="rgb(249,174,33)" fg:x="31" fg:w="1"/><text x="0.6910%" y="447.50"></text></g><g><title>ntdll`RtlFormatCurrentUserKeyPath (1 samples, 0.01%)</title><rect x="0.4410%" y="421" width="0.0142%" height="15" fill="rgb(233,201,37)" fg:x="31" fg:w="1"/><text x="0.6910%" y="431.50"></text></g><g><title>ntdll`ZwQueryInformationToken (1 samples, 0.01%)</title><rect x="0.4410%" y="405" width="0.0142%" height="15" fill="rgb(221,78,26)" fg:x="31" fg:w="1"/><text x="0.6910%" y="415.50"></text></g><g><title>ntdll`RtlNotifyFeatureUsage (1 samples, 0.01%)</title><rect x="0.4553%" y="437" width="0.0142%" height="15" fill="rgb(250,127,30)" fg:x="32" fg:w="1"/><text x="0.7053%" y="447.50"></text></g><g><title>ntdll`RtlNotifyFeatureUsage (1 samples, 0.01%)</title><rect x="0.4553%" y="421" width="0.0142%" height="15" fill="rgb(230,49,44)" fg:x="32" fg:w="1"/><text x="0.7053%" y="431.50"></text></g><g><title>ntdll`LdrInitializeThunk (34 samples, 0.48%)</title><rect x="0.0000%" y="485" width="0.4837%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="34"/><text x="0.2500%" y="495.50"></text></g><g><title>ntdll`EtwLogTraceEvent (34 samples, 0.48%)</title><rect x="0.0000%" y="469" width="0.4837%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="34"/><text x="0.2500%" y="479.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (34 samples, 0.48%)</title><rect x="0.0000%" y="453" width="0.4837%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="34"/><text x="0.2500%" y="463.50"></text></g><g><title>ntdll`RtlUnicodeToMultiByteN (1 samples, 0.01%)</title><rect x="0.4695%" y="437" width="0.0142%" height="15" fill="rgb(238,154,13)" fg:x="33" fg:w="1"/><text x="0.7195%" y="447.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.4695%" y="421" width="0.0142%" height="15" fill="rgb(219,56,2)" fg:x="33" fg:w="1"/><text x="0.7195%" y="431.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.01%)</title><rect x="0.4695%" y="405" width="0.0142%" height="15" fill="rgb(233,0,4)" fg:x="33" fg:w="1"/><text x="0.7195%" y="415.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.01%)</title><rect x="0.4695%" y="389" width="0.0142%" height="15" fill="rgb(235,30,7)" fg:x="33" fg:w="1"/><text x="0.7195%" y="399.50"></text></g><g><title>ntdll`LdrInitializeThunk (35 samples, 0.50%)</title><rect x="0.0000%" y="501" width="0.4979%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="35"/><text x="0.2500%" y="511.50"></text></g><g><title>ntdll`RtlCopyMemory (1 samples, 0.01%)</title><rect x="0.4837%" y="485" width="0.0142%" height="15" fill="rgb(211,146,34)" fg:x="34" fg:w="1"/><text x="0.7337%" y="495.50"></text></g><g><title>ntdll`ZwCreateEvent (1 samples, 0.01%)</title><rect x="0.4837%" y="469" width="0.0142%" height="15" fill="rgb(228,22,38)" fg:x="34" fg:w="1"/><text x="0.7337%" y="479.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (4 samples, 0.06%)</title><rect x="0.5406%" y="405" width="0.0569%" height="15" fill="rgb(235,168,5)" fg:x="38" fg:w="4"/><text x="0.7906%" y="415.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.01%)</title><rect x="0.5833%" y="389" width="0.0142%" height="15" fill="rgb(221,155,16)" fg:x="41" fg:w="1"/><text x="0.8333%" y="399.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.01%)</title><rect x="0.5833%" y="373" width="0.0142%" height="15" fill="rgb(215,215,53)" fg:x="41" fg:w="1"/><text x="0.8333%" y="383.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.01%)</title><rect x="0.5833%" y="357" width="0.0142%" height="15" fill="rgb(223,4,10)" fg:x="41" fg:w="1"/><text x="0.8333%" y="367.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (1 samples, 0.01%)</title><rect x="0.5975%" y="389" width="0.0142%" height="15" fill="rgb(234,103,6)" fg:x="42" fg:w="1"/><text x="0.8475%" y="399.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.01%)</title><rect x="0.5975%" y="373" width="0.0142%" height="15" fill="rgb(227,97,0)" fg:x="42" fg:w="1"/><text x="0.8475%" y="383.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="0.5975%" y="357" width="0.0142%" height="15" fill="rgb(234,150,53)" fg:x="42" fg:w="1"/><text x="0.8475%" y="367.50"></text></g><g><title>ntdll`ZwQueryAttributesFile (1 samples, 0.01%)</title><rect x="0.5975%" y="341" width="0.0142%" height="15" fill="rgb(228,201,54)" fg:x="42" fg:w="1"/><text x="0.8475%" y="351.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.01%)</title><rect x="0.6118%" y="373" width="0.0142%" height="15" fill="rgb(222,22,37)" fg:x="43" fg:w="1"/><text x="0.8618%" y="383.50"></text></g><g><title>ntdll`ZwClose (1 samples, 0.01%)</title><rect x="0.6260%" y="373" width="0.0142%" height="15" fill="rgb(237,53,32)" fg:x="44" fg:w="1"/><text x="0.8760%" y="383.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (8 samples, 0.11%)</title><rect x="0.5406%" y="437" width="0.1138%" height="15" fill="rgb(233,25,53)" fg:x="38" fg:w="8"/><text x="0.7906%" y="447.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (8 samples, 0.11%)</title><rect x="0.5406%" y="421" width="0.1138%" height="15" fill="rgb(210,40,34)" fg:x="38" fg:w="8"/><text x="0.7906%" y="431.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.06%)</title><rect x="0.5975%" y="405" width="0.0569%" height="15" fill="rgb(241,220,44)" fg:x="42" fg:w="4"/><text x="0.8475%" y="415.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.04%)</title><rect x="0.6118%" y="389" width="0.0427%" height="15" fill="rgb(235,28,35)" fg:x="43" fg:w="3"/><text x="0.8618%" y="399.50"></text></g><g><title>ntdll`ZwCreateSection (1 samples, 0.01%)</title><rect x="0.6402%" y="373" width="0.0142%" height="15" fill="rgb(210,56,17)" fg:x="45" fg:w="1"/><text x="0.8902%" y="383.50"></text></g><g><title>ntdll`RtlClearThreadWorkOnBehalfTicket (10 samples, 0.14%)</title><rect x="0.5264%" y="469" width="0.1423%" height="15" fill="rgb(224,130,29)" fg:x="37" fg:w="10"/><text x="0.7764%" y="479.50"></text></g><g><title>ntdll`RtlHashUnicodeString (9 samples, 0.13%)</title><rect x="0.5406%" y="453" width="0.1280%" height="15" fill="rgb(235,212,8)" fg:x="38" fg:w="9"/><text x="0.7906%" y="463.50"></text></g><g><title>ntdll`TpWorkOnBehalfSetTicket (1 samples, 0.01%)</title><rect x="0.6544%" y="437" width="0.0142%" height="15" fill="rgb(223,33,50)" fg:x="46" fg:w="1"/><text x="0.9044%" y="447.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.01%)</title><rect x="0.6544%" y="421" width="0.0142%" height="15" fill="rgb(219,149,13)" fg:x="46" fg:w="1"/><text x="0.9044%" y="431.50"></text></g><g><title>ntdll`ZwReleaseWorkerFactoryWorker (1 samples, 0.01%)</title><rect x="0.6544%" y="405" width="0.0142%" height="15" fill="rgb(250,156,29)" fg:x="46" fg:w="1"/><text x="0.9044%" y="415.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="0.6687%" y="245" width="0.0142%" height="15" fill="rgb(216,193,19)" fg:x="47" fg:w="1"/><text x="0.9187%" y="255.50"></text></g><g><title>ntdll`RtlCopyMemory (3 samples, 0.04%)</title><rect x="0.6687%" y="357" width="0.0427%" height="15" fill="rgb(216,135,14)" fg:x="47" fg:w="3"/><text x="0.9187%" y="367.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (3 samples, 0.04%)</title><rect x="0.6687%" y="341" width="0.0427%" height="15" fill="rgb(241,47,5)" fg:x="47" fg:w="3"/><text x="0.9187%" y="351.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (3 samples, 0.04%)</title><rect x="0.6687%" y="325" width="0.0427%" height="15" fill="rgb(233,42,35)" fg:x="47" fg:w="3"/><text x="0.9187%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.04%)</title><rect x="0.6687%" y="309" width="0.0427%" height="15" fill="rgb(231,13,6)" fg:x="47" fg:w="3"/><text x="0.9187%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (3 samples, 0.04%)</title><rect x="0.6687%" y="293" width="0.0427%" height="15" fill="rgb(207,181,40)" fg:x="47" fg:w="3"/><text x="0.9187%" y="303.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (3 samples, 0.04%)</title><rect x="0.6687%" y="277" width="0.0427%" height="15" fill="rgb(254,173,49)" fg:x="47" fg:w="3"/><text x="0.9187%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.04%)</title><rect x="0.6687%" y="261" width="0.0427%" height="15" fill="rgb(221,1,38)" fg:x="47" fg:w="3"/><text x="0.9187%" y="271.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.03%)</title><rect x="0.6829%" y="245" width="0.0285%" height="15" fill="rgb(206,124,46)" fg:x="48" fg:w="2"/><text x="0.9329%" y="255.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.03%)</title><rect x="0.6829%" y="229" width="0.0285%" height="15" fill="rgb(249,21,11)" fg:x="48" fg:w="2"/><text x="0.9329%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.03%)</title><rect x="0.6829%" y="213" width="0.0285%" height="15" fill="rgb(222,201,40)" fg:x="48" fg:w="2"/><text x="0.9329%" y="223.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (2 samples, 0.03%)</title><rect x="0.6829%" y="197" width="0.0285%" height="15" fill="rgb(235,61,29)" fg:x="48" fg:w="2"/><text x="0.9329%" y="207.50"></text></g><g><title>ntdll`RtlFreeHeap (7 samples, 0.10%)</title><rect x="0.6687%" y="373" width="0.0996%" height="15" fill="rgb(219,207,3)" fg:x="47" fg:w="7"/><text x="0.9187%" y="383.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (4 samples, 0.06%)</title><rect x="0.7113%" y="357" width="0.0569%" height="15" fill="rgb(222,56,46)" fg:x="50" fg:w="4"/><text x="0.9613%" y="367.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="0.7540%" y="341" width="0.0142%" height="15" fill="rgb(239,76,54)" fg:x="53" fg:w="1"/><text x="1.0040%" y="351.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.7540%" y="325" width="0.0142%" height="15" fill="rgb(231,124,27)" fg:x="53" fg:w="1"/><text x="1.0040%" y="335.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.7540%" y="309" width="0.0142%" height="15" fill="rgb(249,195,6)" fg:x="53" fg:w="1"/><text x="1.0040%" y="319.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="0.7540%" y="293" width="0.0142%" height="15" fill="rgb(237,174,47)" fg:x="53" fg:w="1"/><text x="1.0040%" y="303.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="0.7540%" y="277" width="0.0142%" height="15" fill="rgb(206,201,31)" fg:x="53" fg:w="1"/><text x="1.0040%" y="287.50"></text></g><g><title>kernel32`HeapFree (7 samples, 0.10%)</title><rect x="14.0561%" y="341" width="0.0996%" height="15" fill="rgb(231,57,52)" fg:x="988" fg:w="7"/><text x="14.3061%" y="351.50"></text></g><g><title>ntdll`RtlAllocateHeap (10 samples, 0.14%)</title><rect x="19.3342%" y="309" width="0.1423%" height="15" fill="rgb(248,177,22)" fg:x="1359" fg:w="10"/><text x="19.5842%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (438 samples, 6.23%)</title><rect x="14.1556%" y="341" width="6.2313%" height="15" fill="rgb(215,211,37)" fg:x="995" fg:w="438"/><text x="14.4056%" y="351.50">ntdll`Rt..</text></g><g><title>ntdll`RtlAllocateHeap (341 samples, 4.85%)</title><rect x="15.5356%" y="325" width="4.8513%" height="15" fill="rgb(241,128,51)" fg:x="1092" fg:w="341"/><text x="15.7856%" y="335.50">ntdll`..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (64 samples, 0.91%)</title><rect x="19.4765%" y="309" width="0.9105%" height="15" fill="rgb(227,165,31)" fg:x="1369" fg:w="64"/><text x="19.7265%" y="319.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="30.8721%" y="309" width="0.0142%" height="15" fill="rgb(228,167,24)" fg:x="2170" fg:w="1"/><text x="31.1221%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="30.8863%" y="309" width="0.0142%" height="15" fill="rgb(228,143,12)" fg:x="2171" fg:w="1"/><text x="31.1363%" y="319.50"></text></g><g><title>ntdll`RtlLookupElementGenericTableAvl (1 samples, 0.01%)</title><rect x="30.9006%" y="309" width="0.0142%" height="15" fill="rgb(249,149,8)" fg:x="2172" fg:w="1"/><text x="31.1506%" y="319.50"></text></g><g><title>ntdll`RtlLookupElementGenericTableAvl (1 samples, 0.01%)</title><rect x="30.9006%" y="293" width="0.0142%" height="15" fill="rgb(243,35,44)" fg:x="2172" fg:w="1"/><text x="31.1506%" y="303.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="30.9290%" y="293" width="0.0142%" height="15" fill="rgb(246,89,9)" fg:x="2174" fg:w="1"/><text x="31.1790%" y="303.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (3 samples, 0.04%)</title><rect x="30.9575%" y="213" width="0.0427%" height="15" fill="rgb(233,213,13)" fg:x="2176" fg:w="3"/><text x="31.2075%" y="223.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.01%)</title><rect x="31.0001%" y="197" width="0.0142%" height="15" fill="rgb(233,141,41)" fg:x="2179" fg:w="1"/><text x="31.2501%" y="207.50"></text></g><g><title>ntdll`RtlCopyMemory (665 samples, 9.46%)</title><rect x="21.8808%" y="325" width="9.4608%" height="15" fill="rgb(239,167,4)" fg:x="1538" fg:w="665"/><text x="22.1308%" y="335.50">ntdll`RtlCopyM..</text></g><g><title>ntdll`RtlTryAcquirePebLock (30 samples, 0.43%)</title><rect x="30.9148%" y="309" width="0.4268%" height="15" fill="rgb(209,217,16)" fg:x="2173" fg:w="30"/><text x="31.1648%" y="319.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (28 samples, 0.40%)</title><rect x="30.9432%" y="293" width="0.3983%" height="15" fill="rgb(219,88,35)" fg:x="2175" fg:w="28"/><text x="31.1932%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (28 samples, 0.40%)</title><rect x="30.9432%" y="277" width="0.3983%" height="15" fill="rgb(220,193,23)" fg:x="2175" fg:w="28"/><text x="31.1932%" y="287.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (28 samples, 0.40%)</title><rect x="30.9432%" y="261" width="0.3983%" height="15" fill="rgb(230,90,52)" fg:x="2175" fg:w="28"/><text x="31.1932%" y="271.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (28 samples, 0.40%)</title><rect x="30.9432%" y="245" width="0.3983%" height="15" fill="rgb(252,106,19)" fg:x="2175" fg:w="28"/><text x="31.1932%" y="255.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (27 samples, 0.38%)</title><rect x="30.9575%" y="229" width="0.3841%" height="15" fill="rgb(206,74,20)" fg:x="2176" fg:w="27"/><text x="31.2075%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (24 samples, 0.34%)</title><rect x="31.0001%" y="213" width="0.3414%" height="15" fill="rgb(230,138,44)" fg:x="2179" fg:w="24"/><text x="31.2501%" y="223.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (23 samples, 0.33%)</title><rect x="31.0144%" y="197" width="0.3272%" height="15" fill="rgb(235,182,43)" fg:x="2180" fg:w="23"/><text x="31.2644%" y="207.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (23 samples, 0.33%)</title><rect x="31.0144%" y="181" width="0.3272%" height="15" fill="rgb(242,16,51)" fg:x="2180" fg:w="23"/><text x="31.2644%" y="191.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (23 samples, 0.33%)</title><rect x="31.0144%" y="165" width="0.3272%" height="15" fill="rgb(248,9,4)" fg:x="2180" fg:w="23"/><text x="31.2644%" y="175.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="34.8983%" y="309" width="0.0142%" height="15" fill="rgb(210,31,22)" fg:x="2453" fg:w="1"/><text x="35.1483%" y="319.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="34.8983%" y="293" width="0.0142%" height="15" fill="rgb(239,54,39)" fg:x="2453" fg:w="1"/><text x="35.1483%" y="303.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.01%)</title><rect x="34.8983%" y="277" width="0.0142%" height="15" fill="rgb(230,99,41)" fg:x="2453" fg:w="1"/><text x="35.1483%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (1,048 samples, 14.91%)</title><rect x="20.3870%" y="341" width="14.9097%" height="15" fill="rgb(253,106,12)" fg:x="1433" fg:w="1048"/><text x="20.6370%" y="351.50">ntdll`RtlFreeHeap</text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (278 samples, 3.96%)</title><rect x="31.3416%" y="325" width="3.9550%" height="15" fill="rgb(213,46,41)" fg:x="2203" fg:w="278"/><text x="31.5916%" y="335.50">ntdl..</text></g><g><title>ntdll`RtlFreeHeap (27 samples, 0.38%)</title><rect x="34.9125%" y="309" width="0.3841%" height="15" fill="rgb(215,133,35)" fg:x="2454" fg:w="27"/><text x="35.1625%" y="319.50"></text></g><g><title>toy`_rust_dealloc (2 samples, 0.03%)</title><rect x="35.2966%" y="341" width="0.0285%" height="15" fill="rgb(213,28,5)" fg:x="2481" fg:w="2"/><text x="35.5466%" y="351.50"></text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="35.5243%" y="309" width="0.0285%" height="15" fill="rgb(215,77,49)" fg:x="2497" fg:w="2"/><text x="35.7743%" y="319.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.06%)</title><rect x="35.5243%" y="325" width="0.0569%" height="15" fill="rgb(248,100,22)" fg:x="2497" fg:w="4"/><text x="35.7743%" y="335.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (2 samples, 0.03%)</title><rect x="35.5527%" y="309" width="0.0285%" height="15" fill="rgb(208,67,9)" fg:x="2499" fg:w="2"/><text x="35.8027%" y="319.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::graph_impl::NodeIndex (3 samples, 0.04%)</title><rect x="35.5812%" y="325" width="0.0427%" height="15" fill="rgb(219,133,21)" fg:x="2501" fg:w="3"/><text x="35.8312%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="35.5812%" y="309" width="0.0427%" height="15" fill="rgb(246,46,29)" fg:x="2501" fg:w="3"/><text x="35.8312%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.04%)</title><rect x="35.5812%" y="293" width="0.0427%" height="15" fill="rgb(246,185,52)" fg:x="2501" fg:w="3"/><text x="35.8312%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.04%)</title><rect x="35.5812%" y="277" width="0.0427%" height="15" fill="rgb(252,136,11)" fg:x="2501" fg:w="3"/><text x="35.8312%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.03%)</title><rect x="35.5954%" y="261" width="0.0285%" height="15" fill="rgb(219,138,53)" fg:x="2502" fg:w="2"/><text x="35.8454%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.03%)</title><rect x="35.5954%" y="245" width="0.0285%" height="15" fill="rgb(211,51,23)" fg:x="2502" fg:w="2"/><text x="35.8454%" y="255.50"></text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="35.5954%" y="229" width="0.0285%" height="15" fill="rgb(247,221,28)" fg:x="2502" fg:w="2"/><text x="35.8454%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="35.6808%" y="309" width="0.0142%" height="15" fill="rgb(251,222,45)" fg:x="2508" fg:w="1"/><text x="35.9308%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="35.6808%" y="293" width="0.0142%" height="15" fill="rgb(217,162,53)" fg:x="2508" fg:w="1"/><text x="35.9308%" y="303.50"></text></g><g><title>toy`aeg::aeg::AbstractEventGraph::is_po_connected (27 samples, 0.38%)</title><rect x="35.3251%" y="341" width="0.3841%" height="15" fill="rgb(229,93,14)" fg:x="2483" fg:w="27"/><text x="35.5751%" y="351.50"></text></g><g><title>toy`alloc::vec::spec_from_iter::impl$0::from_iter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,core::iter::adapters::filter_map::FilterMap&lt;petgraph::graph_impl::Edges&lt;aeg::aeg::AegEdge,enum2$ (6 samples, 0.09%)</title><rect x="35.6238%" y="325" width="0.0854%" height="15" fill="rgb(209,67,49)" fg:x="2504" fg:w="6"/><text x="35.8738%" y="335.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="35.6950%" y="309" width="0.0142%" height="15" fill="rgb(213,87,29)" fg:x="2509" fg:w="1"/><text x="35.9450%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="37.3737%" y="277" width="0.0142%" height="15" fill="rgb(205,151,52)" fg:x="2627" fg:w="1"/><text x="37.6237%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (72 samples, 1.02%)</title><rect x="36.4205%" y="309" width="1.0243%" height="15" fill="rgb(253,215,39)" fg:x="2560" fg:w="72"/><text x="36.6705%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (25 samples, 0.36%)</title><rect x="37.0892%" y="293" width="0.3557%" height="15" fill="rgb(221,220,41)" fg:x="2607" fg:w="25"/><text x="37.3392%" y="303.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 0.06%)</title><rect x="37.3880%" y="277" width="0.0569%" height="15" fill="rgb(218,133,21)" fg:x="2628" fg:w="4"/><text x="37.6380%" y="287.50"></text></g><g><title>toy`_rust_alloc (5 samples, 0.07%)</title><rect x="37.4449%" y="309" width="0.0711%" height="15" fill="rgb(221,193,43)" fg:x="2632" fg:w="5"/><text x="37.6949%" y="319.50"></text></g><g><title>toy`alloc::vec::spec_from_iter::impl$0::from_iter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,core::iter::adapters::filter_map::FilterMap&lt;petgraph::graph_impl::Edges&lt;aeg::aeg::AegEdge,enum2$ (113 samples, 1.61%)</title><rect x="36.0080%" y="325" width="1.6076%" height="15" fill="rgb(240,128,52)" fg:x="2531" fg:w="113"/><text x="36.2580%" y="335.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (7 samples, 0.10%)</title><rect x="37.5160%" y="309" width="0.0996%" height="15" fill="rgb(253,114,12)" fg:x="2637" fg:w="7"/><text x="37.7660%" y="319.50"></text></g><g><title>ntdll`RtlCopyMemory (1 samples, 0.01%)</title><rect x="38.0282%" y="277" width="0.0142%" height="15" fill="rgb(215,223,47)" fg:x="2673" fg:w="1"/><text x="38.2782%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (33 samples, 0.47%)</title><rect x="37.6298%" y="309" width="0.4695%" height="15" fill="rgb(248,225,23)" fg:x="2645" fg:w="33"/><text x="37.8798%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (20 samples, 0.28%)</title><rect x="37.8148%" y="293" width="0.2845%" height="15" fill="rgb(250,108,0)" fg:x="2658" fg:w="20"/><text x="38.0648%" y="303.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 0.06%)</title><rect x="38.0424%" y="277" width="0.0569%" height="15" fill="rgb(228,208,7)" fg:x="2674" fg:w="4"/><text x="38.2924%" y="287.50"></text></g><g><title>toy`aeg::aeg::AbstractEventGraph::neighbors (169 samples, 2.40%)</title><rect x="35.7092%" y="341" width="2.4043%" height="15" fill="rgb(244,45,10)" fg:x="2510" fg:w="169"/><text x="35.9592%" y="351.50">to..</text></g><g><title>toy`fixedbitset::FixedBitSet::with_capacity (35 samples, 0.50%)</title><rect x="37.6156%" y="325" width="0.4979%" height="15" fill="rgb(207,125,25)" fg:x="2644" fg:w="35"/><text x="37.8656%" y="335.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc_zeroed (1 samples, 0.01%)</title><rect x="38.0993%" y="309" width="0.0142%" height="15" fill="rgb(210,195,18)" fg:x="2678" fg:w="1"/><text x="38.3493%" y="319.50"></text></g><g><title>kernel32`HeapFree (1 samples, 0.01%)</title><rect x="43.8327%" y="309" width="0.0142%" height="15" fill="rgb(249,80,12)" fg:x="3081" fg:w="1"/><text x="44.0827%" y="319.50"></text></g><g><title>ntdll`RtlCopyMemory (29 samples, 0.41%)</title><rect x="43.9181%" y="293" width="0.4126%" height="15" fill="rgb(221,65,9)" fg:x="3087" fg:w="29"/><text x="44.1681%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (46 samples, 0.65%)</title><rect x="43.8469%" y="309" width="0.6544%" height="15" fill="rgb(235,49,36)" fg:x="3082" fg:w="46"/><text x="44.0969%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (12 samples, 0.17%)</title><rect x="44.3306%" y="293" width="0.1707%" height="15" fill="rgb(225,32,20)" fg:x="3116" fg:w="12"/><text x="44.5806%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.04%)</title><rect x="44.4587%" y="277" width="0.0427%" height="15" fill="rgb(215,141,46)" fg:x="3125" fg:w="3"/><text x="44.7087%" y="287.50"></text></g><g><title>toy`_rust_dealloc (1 samples, 0.01%)</title><rect x="44.5014%" y="309" width="0.0142%" height="15" fill="rgb(250,160,47)" fg:x="3128" fg:w="1"/><text x="44.7514%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.9708%" y="197" width="0.0142%" height="15" fill="rgb(216,222,40)" fg:x="3161" fg:w="1"/><text x="45.2208%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.9708%" y="181" width="0.0142%" height="15" fill="rgb(234,217,39)" fg:x="3161" fg:w="1"/><text x="45.2208%" y="191.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="44.9851%" y="197" width="0.0142%" height="15" fill="rgb(207,178,40)" fg:x="3162" fg:w="1"/><text x="45.2351%" y="207.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="44.9851%" y="181" width="0.0142%" height="15" fill="rgb(221,136,13)" fg:x="3162" fg:w="1"/><text x="45.2351%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.9851%" y="165" width="0.0142%" height="15" fill="rgb(249,199,10)" fg:x="3162" fg:w="1"/><text x="45.2351%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="44.9851%" y="149" width="0.0142%" height="15" fill="rgb(249,222,13)" fg:x="3162" fg:w="1"/><text x="45.2351%" y="159.50"></text></g><g><title>ntdll`RtlAllocateHeap (26 samples, 0.37%)</title><rect x="44.7005%" y="229" width="0.3699%" height="15" fill="rgb(244,185,38)" fg:x="3142" fg:w="26"/><text x="44.9505%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (19 samples, 0.27%)</title><rect x="44.8001%" y="213" width="0.2703%" height="15" fill="rgb(236,202,9)" fg:x="3149" fg:w="19"/><text x="45.0501%" y="223.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (5 samples, 0.07%)</title><rect x="44.9993%" y="197" width="0.0711%" height="15" fill="rgb(250,229,37)" fg:x="3163" fg:w="5"/><text x="45.2493%" y="207.50"></text></g><g><title>ntdll`RtlCopyMemory (7 samples, 0.10%)</title><rect x="45.0704%" y="213" width="0.0996%" height="15" fill="rgb(206,174,23)" fg:x="3168" fg:w="7"/><text x="45.3204%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (48 samples, 0.68%)</title><rect x="44.5583%" y="277" width="0.6829%" height="15" fill="rgb(211,33,43)" fg:x="3132" fg:w="48"/><text x="44.8083%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (47 samples, 0.67%)</title><rect x="44.5725%" y="261" width="0.6687%" height="15" fill="rgb(245,58,50)" fg:x="3133" fg:w="47"/><text x="44.8225%" y="271.50"></text></g><g><title>ntdll`RtlReAllocateHeap (45 samples, 0.64%)</title><rect x="44.6009%" y="245" width="0.6402%" height="15" fill="rgb(244,68,36)" fg:x="3135" fg:w="45"/><text x="44.8509%" y="255.50"></text></g><g><title>ntdll`RtlFreeHeap (12 samples, 0.17%)</title><rect x="45.0704%" y="229" width="0.1707%" height="15" fill="rgb(232,229,15)" fg:x="3168" fg:w="12"/><text x="45.3204%" y="239.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (5 samples, 0.07%)</title><rect x="45.1700%" y="213" width="0.0711%" height="15" fill="rgb(254,30,23)" fg:x="3175" fg:w="5"/><text x="45.4200%" y="223.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::graph_impl::NodeIndex (53 samples, 0.75%)</title><rect x="44.5156%" y="309" width="0.7540%" height="15" fill="rgb(235,160,14)" fg:x="3129" fg:w="53"/><text x="44.7656%" y="319.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (50 samples, 0.71%)</title><rect x="44.5583%" y="293" width="0.7113%" height="15" fill="rgb(212,155,44)" fg:x="3132" fg:w="50"/><text x="44.8083%" y="303.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_realloc (2 samples, 0.03%)</title><rect x="45.2411%" y="277" width="0.0285%" height="15" fill="rgb(226,2,50)" fg:x="3180" fg:w="2"/><text x="45.4911%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="46.0521%" y="261" width="0.0142%" height="15" fill="rgb(234,177,6)" fg:x="3237" fg:w="1"/><text x="46.3021%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="46.0663%" y="261" width="0.0142%" height="15" fill="rgb(217,24,9)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="46.0663%" y="245" width="0.0142%" height="15" fill="rgb(220,13,46)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="255.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="46.0663%" y="229" width="0.0142%" height="15" fill="rgb(239,221,27)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="46.0663%" y="213" width="0.0142%" height="15" fill="rgb(222,198,25)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="46.0663%" y="197" width="0.0142%" height="15" fill="rgb(211,99,13)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="207.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="46.0663%" y="181" width="0.0142%" height="15" fill="rgb(232,111,31)" fg:x="3238" fg:w="1"/><text x="46.3163%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (32 samples, 0.46%)</title><rect x="45.6822%" y="293" width="0.4553%" height="15" fill="rgb(245,82,37)" fg:x="3211" fg:w="32"/><text x="45.9322%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (29 samples, 0.41%)</title><rect x="45.7249%" y="277" width="0.4126%" height="15" fill="rgb(227,149,46)" fg:x="3214" fg:w="29"/><text x="45.9749%" y="287.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 0.06%)</title><rect x="46.0805%" y="261" width="0.0569%" height="15" fill="rgb(218,36,50)" fg:x="3239" fg:w="4"/><text x="46.3305%" y="271.50"></text></g><g><title>toy`alloc::vec::spec_from_iter::impl$0::from_iter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,core::iter::adapters::filter_map::FilterMap&lt;petgraph::graph_impl::Edges&lt;aeg::aeg::AegEdge,enum2$ (64 samples, 0.91%)</title><rect x="45.2696%" y="309" width="0.9105%" height="15" fill="rgb(226,80,48)" fg:x="3182" fg:w="64"/><text x="45.5196%" y="319.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (3 samples, 0.04%)</title><rect x="46.1374%" y="293" width="0.0427%" height="15" fill="rgb(238,224,15)" fg:x="3243" fg:w="3"/><text x="46.3874%" y="303.50"></text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="46.5073%" y="261" width="0.0285%" height="15" fill="rgb(241,136,10)" fg:x="3269" fg:w="2"/><text x="46.7573%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (28 samples, 0.40%)</title><rect x="46.2370%" y="293" width="0.3983%" height="15" fill="rgb(208,32,45)" fg:x="3250" fg:w="28"/><text x="46.4870%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (22 samples, 0.31%)</title><rect x="46.3224%" y="277" width="0.3130%" height="15" fill="rgb(207,135,9)" fg:x="3256" fg:w="22"/><text x="46.5724%" y="287.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (7 samples, 0.10%)</title><rect x="46.5358%" y="261" width="0.0996%" height="15" fill="rgb(206,86,44)" fg:x="3271" fg:w="7"/><text x="46.7858%" y="271.50"></text></g><g><title>toy`aeg::aeg::AbstractEventGraph::is_po_connected (349 samples, 4.97%)</title><rect x="41.6845%" y="325" width="4.9651%" height="15" fill="rgb(245,177,15)" fg:x="2930" fg:w="349"/><text x="41.9345%" y="335.50">toy`ae..</text></g><g><title>toy`fixedbitset::FixedBitSet::with_capacity (33 samples, 0.47%)</title><rect x="46.1801%" y="309" width="0.4695%" height="15" fill="rgb(206,64,50)" fg:x="3246" fg:w="33"/><text x="46.4301%" y="319.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc_zeroed (1 samples, 0.01%)</title><rect x="46.6354%" y="293" width="0.0142%" height="15" fill="rgb(234,36,40)" fg:x="3278" fg:w="1"/><text x="46.8854%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.06%)</title><rect x="47.4178%" y="213" width="0.0569%" height="15" fill="rgb(213,64,8)" fg:x="3333" fg:w="4"/><text x="47.6678%" y="223.50"></text></g><g><title>ntdll`RtlAllocateHeap (37 samples, 0.53%)</title><rect x="47.0053%" y="245" width="0.5264%" height="15" fill="rgb(210,75,36)" fg:x="3304" fg:w="37"/><text x="47.2553%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (28 samples, 0.40%)</title><rect x="47.1333%" y="229" width="0.3983%" height="15" fill="rgb(229,88,21)" fg:x="3313" fg:w="28"/><text x="47.3833%" y="239.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 0.06%)</title><rect x="47.4747%" y="213" width="0.0569%" height="15" fill="rgb(252,204,47)" fg:x="3337" fg:w="4"/><text x="47.7247%" y="223.50"></text></g><g><title>ntdll`RtlCopyMemory (14 samples, 0.20%)</title><rect x="47.5459%" y="229" width="0.1992%" height="15" fill="rgb(208,77,27)" fg:x="3342" fg:w="14"/><text x="47.7959%" y="239.50"></text></g><g><title>ntdll`RtlReAllocateHeap (69 samples, 0.98%)</title><rect x="46.8488%" y="261" width="0.9816%" height="15" fill="rgb(221,76,26)" fg:x="3293" fg:w="69"/><text x="47.0988%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (21 samples, 0.30%)</title><rect x="47.5317%" y="245" width="0.2988%" height="15" fill="rgb(225,139,18)" fg:x="3341" fg:w="21"/><text x="47.7817%" y="255.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (6 samples, 0.09%)</title><rect x="47.7451%" y="229" width="0.0854%" height="15" fill="rgb(230,137,11)" fg:x="3356" fg:w="6"/><text x="47.9951%" y="239.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="47.8162%" y="213" width="0.0142%" height="15" fill="rgb(212,28,1)" fg:x="3361" fg:w="1"/><text x="48.0662%" y="223.50"></text></g><g><title>ntdll`RtlReAllocateHeap (79 samples, 1.12%)</title><rect x="46.7207%" y="293" width="1.1239%" height="15" fill="rgb(248,164,17)" fg:x="3284" fg:w="79"/><text x="46.9707%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (76 samples, 1.08%)</title><rect x="46.7634%" y="277" width="1.0812%" height="15" fill="rgb(222,171,42)" fg:x="3287" fg:w="76"/><text x="47.0134%" y="287.50"></text></g><g><title>ntdll`RtlRetrieveNtUserPfn (1 samples, 0.01%)</title><rect x="47.8304%" y="261" width="0.0142%" height="15" fill="rgb(243,84,45)" fg:x="3362" fg:w="1"/><text x="48.0804%" y="271.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::graph_impl::NodeIndex (88 samples, 1.25%)</title><rect x="46.6496%" y="325" width="1.2520%" height="15" fill="rgb(252,49,23)" fg:x="3279" fg:w="88"/><text x="46.8996%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (86 samples, 1.22%)</title><rect x="46.6780%" y="309" width="1.2235%" height="15" fill="rgb(215,19,7)" fg:x="3281" fg:w="86"/><text x="46.9280%" y="319.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_realloc (4 samples, 0.06%)</title><rect x="47.8446%" y="293" width="0.0569%" height="15" fill="rgb(238,81,41)" fg:x="3363" fg:w="4"/><text x="48.0946%" y="303.50"></text></g><g><title>kernel32`HeapFree (1 samples, 0.01%)</title><rect x="49.6799%" y="309" width="0.0142%" height="15" fill="rgb(210,199,37)" fg:x="3492" fg:w="1"/><text x="49.9299%" y="319.50"></text></g><g><title>ntdll`RtlCopyMemory (24 samples, 0.34%)</title><rect x="49.7653%" y="293" width="0.3414%" height="15" fill="rgb(244,192,49)" fg:x="3498" fg:w="24"/><text x="50.0153%" y="303.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="50.0925%" y="277" width="0.0142%" height="15" fill="rgb(226,211,11)" fg:x="3521" fg:w="1"/><text x="50.3425%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (37 samples, 0.53%)</title><rect x="49.6941%" y="309" width="0.5264%" height="15" fill="rgb(236,162,54)" fg:x="3493" fg:w="37"/><text x="49.9441%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (8 samples, 0.11%)</title><rect x="50.1067%" y="293" width="0.1138%" height="15" fill="rgb(220,229,9)" fg:x="3522" fg:w="8"/><text x="50.3567%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (13 samples, 0.18%)</title><rect x="51.1310%" y="261" width="0.1849%" height="15" fill="rgb(250,87,22)" fg:x="3594" fg:w="13"/><text x="51.3810%" y="271.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (1 samples, 0.01%)</title><rect x="51.3444%" y="181" width="0.0142%" height="15" fill="rgb(239,43,17)" fg:x="3609" fg:w="1"/><text x="51.5944%" y="191.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="51.3444%" y="165" width="0.0142%" height="15" fill="rgb(231,177,25)" fg:x="3609" fg:w="1"/><text x="51.5944%" y="175.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (4 samples, 0.06%)</title><rect x="51.3160%" y="261" width="0.0569%" height="15" fill="rgb(219,179,1)" fg:x="3607" fg:w="4"/><text x="51.5660%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (4 samples, 0.06%)</title><rect x="51.3160%" y="245" width="0.0569%" height="15" fill="rgb(238,219,53)" fg:x="3607" fg:w="4"/><text x="51.5660%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.06%)</title><rect x="51.3160%" y="229" width="0.0569%" height="15" fill="rgb(232,167,36)" fg:x="3607" fg:w="4"/><text x="51.5660%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.06%)</title><rect x="51.3160%" y="213" width="0.0569%" height="15" fill="rgb(244,19,51)" fg:x="3607" fg:w="4"/><text x="51.5660%" y="223.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.03%)</title><rect x="51.3444%" y="197" width="0.0285%" height="15" fill="rgb(224,6,22)" fg:x="3609" fg:w="2"/><text x="51.5944%" y="207.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="51.3587%" y="181" width="0.0142%" height="15" fill="rgb(224,145,5)" fg:x="3610" fg:w="1"/><text x="51.6087%" y="191.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="51.3587%" y="165" width="0.0142%" height="15" fill="rgb(234,130,49)" fg:x="3610" fg:w="1"/><text x="51.6087%" y="175.50"></text></g><g><title>ntdll`RtlAllocateHeap (78 samples, 1.11%)</title><rect x="50.4055%" y="293" width="1.1097%" height="15" fill="rgb(254,6,2)" fg:x="3543" fg:w="78"/><text x="50.6555%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (58 samples, 0.83%)</title><rect x="50.6900%" y="277" width="0.8252%" height="15" fill="rgb(208,96,46)" fg:x="3563" fg:w="58"/><text x="50.9400%" y="287.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (10 samples, 0.14%)</title><rect x="51.3729%" y="261" width="0.1423%" height="15" fill="rgb(239,3,39)" fg:x="3611" fg:w="10"/><text x="51.6229%" y="271.50"></text></g><g><title>toy`_rust_alloc (2 samples, 0.03%)</title><rect x="51.5152%" y="293" width="0.0285%" height="15" fill="rgb(233,210,1)" fg:x="3621" fg:w="2"/><text x="51.7652%" y="303.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.03%)</title><rect x="51.5436%" y="293" width="0.0285%" height="15" fill="rgb(244,137,37)" fg:x="3623" fg:w="2"/><text x="51.7936%" y="303.50"></text></g><g><title>toy`aeg::critical_cycles::IncompleteMinimalCycle (948 samples, 13.49%)</title><rect x="38.1135%" y="341" width="13.4870%" height="15" fill="rgb(240,136,2)" fg:x="2679" fg:w="948"/><text x="38.3635%" y="351.50">toy`aeg::critical_cy..</text></g><g><title>toy`hashbrown::raw::inner::RawTable&lt;tuple$&lt;usize,smallvec::SmallVec&lt;array$&lt;usize,3&gt; &gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::reserve_rehash&lt;tuple$&lt;usize,smallvec::SmallVec&lt;array$&lt;usize,3&gt; &gt; &gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::make_hasher::closure_env$0&lt;usize,smallvec::SmallVec&lt;array$&lt;usize,3&gt; &gt;,core::hash::BuildHasherDefault (260 samples, 3.70%)</title><rect x="47.9016%" y="325" width="3.6990%" height="15" fill="rgb(239,18,37)" fg:x="3367" fg:w="260"/><text x="48.1516%" y="335.50">toy`..</text></g><g><title>toy`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (97 samples, 1.38%)</title><rect x="50.2205%" y="309" width="1.3800%" height="15" fill="rgb(218,185,22)" fg:x="3530" fg:w="97"/><text x="50.4705%" y="319.50"></text></g><g><title>vcruntime140`memset (2 samples, 0.03%)</title><rect x="51.5721%" y="293" width="0.0285%" height="15" fill="rgb(225,218,4)" fg:x="3625" fg:w="2"/><text x="51.8221%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.3403%" y="229" width="0.0142%" height="15" fill="rgb(230,182,32)" fg:x="3679" fg:w="1"/><text x="52.5903%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (34 samples, 0.48%)</title><rect x="51.9277%" y="261" width="0.4837%" height="15" fill="rgb(242,56,43)" fg:x="3650" fg:w="34"/><text x="52.1777%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (23 samples, 0.33%)</title><rect x="52.0842%" y="245" width="0.3272%" height="15" fill="rgb(233,99,24)" fg:x="3661" fg:w="23"/><text x="52.3342%" y="255.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (4 samples, 0.06%)</title><rect x="52.3545%" y="229" width="0.0569%" height="15" fill="rgb(234,209,42)" fg:x="3680" fg:w="4"/><text x="52.6045%" y="239.50"></text></g><g><title>ntdll`RtlCopyMemory (10 samples, 0.14%)</title><rect x="52.4257%" y="245" width="0.1423%" height="15" fill="rgb(227,7,12)" fg:x="3685" fg:w="10"/><text x="52.6757%" y="255.50"></text></g><g><title>ntdll`RtlReAllocateHeap (55 samples, 0.78%)</title><rect x="51.7997%" y="277" width="0.7825%" height="15" fill="rgb(245,203,43)" fg:x="3641" fg:w="55"/><text x="52.0497%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (12 samples, 0.17%)</title><rect x="52.4114%" y="261" width="0.1707%" height="15" fill="rgb(238,205,33)" fg:x="3684" fg:w="12"/><text x="52.6614%" y="271.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="52.5679%" y="245" width="0.0142%" height="15" fill="rgb(231,56,7)" fg:x="3695" fg:w="1"/><text x="52.8179%" y="255.50"></text></g><g><title>ntdll`RtlReAllocateHeap (62 samples, 0.88%)</title><rect x="51.7286%" y="309" width="0.8821%" height="15" fill="rgb(244,186,29)" fg:x="3636" fg:w="62"/><text x="51.9786%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (62 samples, 0.88%)</title><rect x="51.7286%" y="293" width="0.8821%" height="15" fill="rgb(234,111,31)" fg:x="3636" fg:w="62"/><text x="51.9786%" y="303.50"></text></g><g><title>ntdll`RtlRetrieveNtUserPfn (2 samples, 0.03%)</title><rect x="52.5822%" y="277" width="0.0285%" height="15" fill="rgb(241,149,10)" fg:x="3696" fg:w="2"/><text x="52.8322%" y="287.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::graph_impl::NodeIndex (74 samples, 1.05%)</title><rect x="51.6005%" y="341" width="1.0528%" height="15" fill="rgb(249,206,44)" fg:x="3627" fg:w="74"/><text x="51.8505%" y="351.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (67 samples, 0.95%)</title><rect x="51.7001%" y="325" width="0.9532%" height="15" fill="rgb(251,153,30)" fg:x="3634" fg:w="67"/><text x="51.9501%" y="335.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_realloc (3 samples, 0.04%)</title><rect x="52.6106%" y="309" width="0.0427%" height="15" fill="rgb(239,152,38)" fg:x="3698" fg:w="3"/><text x="52.8606%" y="319.50"></text></g><g><title>toy`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="52.6533%" y="341" width="0.0142%" height="15" fill="rgb(249,139,47)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="351.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="52.6533%" y="325" width="0.0142%" height="15" fill="rgb(244,64,35)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="335.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="52.6533%" y="309" width="0.0142%" height="15" fill="rgb(216,46,15)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="52.6533%" y="293" width="0.0142%" height="15" fill="rgb(250,74,19)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (1 samples, 0.01%)</title><rect x="52.6533%" y="277" width="0.0142%" height="15" fill="rgb(249,42,33)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="287.50"></text></g><g><title>ntdll`RtlCopyMemory (1 samples, 0.01%)</title><rect x="52.6533%" y="261" width="0.0142%" height="15" fill="rgb(242,149,17)" fg:x="3701" fg:w="1"/><text x="52.9033%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.6675%" y="325" width="0.0142%" height="15" fill="rgb(244,29,21)" fg:x="3702" fg:w="1"/><text x="52.9175%" y="335.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.6675%" y="309" width="0.0142%" height="15" fill="rgb(220,130,37)" fg:x="3702" fg:w="1"/><text x="52.9175%" y="319.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="52.6675%" y="293" width="0.0142%" height="15" fill="rgb(211,67,2)" fg:x="3702" fg:w="1"/><text x="52.9175%" y="303.50"></text></g><g><title>toy`_rust_alloc (1 samples, 0.01%)</title><rect x="52.6817%" y="325" width="0.0142%" height="15" fill="rgb(235,68,52)" fg:x="3703" fg:w="1"/><text x="52.9317%" y="335.50"></text></g><g><title>toy`alloc::vec::in_place_collect::impl$1::from_iter&lt;aeg::critical_cycles::CriticalCycle,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (3 samples, 0.04%)</title><rect x="52.6675%" y="341" width="0.0427%" height="15" fill="rgb(246,142,3)" fg:x="3702" fg:w="3"/><text x="52.9175%" y="351.50"></text></g><g><title>toy`core::iter::adapters::map::impl$2::fold&lt;aeg::critical_cycles::CriticalCycle,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,aeg::critical_cycles::impl$3::complete::closure_env$0,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;aeg::critical_cycles::CriticalCycle,alloc::vec::impl$19::extend_trusted::closure_env$0&lt;aeg::critical_cycles::CriticalCycle,alloc::alloc::Global,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (1 samples, 0.01%)</title><rect x="52.6960%" y="325" width="0.0142%" height="15" fill="rgb(241,25,7)" fg:x="3704" fg:w="1"/><text x="52.9460%" y="335.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.6960%" y="309" width="0.0142%" height="15" fill="rgb(242,119,39)" fg:x="3704" fg:w="1"/><text x="52.9460%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.6960%" y="293" width="0.0142%" height="15" fill="rgb(241,98,45)" fg:x="3704" fg:w="1"/><text x="52.9460%" y="303.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="52.6960%" y="277" width="0.0142%" height="15" fill="rgb(254,28,30)" fg:x="3704" fg:w="1"/><text x="52.9460%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7671%" y="293" width="0.0142%" height="15" fill="rgb(241,142,54)" fg:x="3709" fg:w="1"/><text x="53.0171%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7671%" y="277" width="0.0142%" height="15" fill="rgb(222,85,15)" fg:x="3709" fg:w="1"/><text x="53.0171%" y="287.50"></text></g><g><title>toy`alloc::vec::spec_extend::impl$1::spec_extend&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Windows&lt;petgraph::graph_impl::NodeIndex (7 samples, 0.10%)</title><rect x="52.7102%" y="341" width="0.0996%" height="15" fill="rgb(210,85,47)" fg:x="3705" fg:w="7"/><text x="52.9602%" y="351.50"></text></g><g><title>toy`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle&lt;petgraph::graph_impl::EdgeIndex (4 samples, 0.06%)</title><rect x="52.7529%" y="325" width="0.0569%" height="15" fill="rgb(224,206,25)" fg:x="3708" fg:w="4"/><text x="53.0029%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="52.7529%" y="309" width="0.0569%" height="15" fill="rgb(243,201,19)" fg:x="3708" fg:w="4"/><text x="53.0029%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.03%)</title><rect x="52.7813%" y="293" width="0.0285%" height="15" fill="rgb(236,59,4)" fg:x="3710" fg:w="2"/><text x="53.0313%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.03%)</title><rect x="52.7813%" y="277" width="0.0285%" height="15" fill="rgb(254,179,45)" fg:x="3710" fg:w="2"/><text x="53.0313%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (2 samples, 0.03%)</title><rect x="52.7813%" y="261" width="0.0285%" height="15" fill="rgb(226,14,10)" fg:x="3710" fg:w="2"/><text x="53.0313%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7956%" y="245" width="0.0142%" height="15" fill="rgb(244,27,41)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7956%" y="229" width="0.0142%" height="15" fill="rgb(235,35,32)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="239.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="52.7956%" y="213" width="0.0142%" height="15" fill="rgb(218,68,31)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="52.7956%" y="197" width="0.0142%" height="15" fill="rgb(207,120,37)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7956%" y="181" width="0.0142%" height="15" fill="rgb(227,98,0)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="52.7956%" y="165" width="0.0142%" height="15" fill="rgb(207,7,3)" fg:x="3711" fg:w="1"/><text x="53.0456%" y="175.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="55.9397%" y="293" width="0.0142%" height="15" fill="rgb(206,98,19)" fg:x="3932" fg:w="1"/><text x="56.1897%" y="303.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.01%)</title><rect x="55.9539%" y="197" width="0.0142%" height="15" fill="rgb(217,5,26)" fg:x="3933" fg:w="1"/><text x="56.2039%" y="207.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (2 samples, 0.03%)</title><rect x="55.9681%" y="181" width="0.0285%" height="15" fill="rgb(235,190,38)" fg:x="3934" fg:w="2"/><text x="56.2181%" y="191.50"></text></g><g><title>ntdll`RtlCopyMemory (48 samples, 0.68%)</title><rect x="55.5129%" y="309" width="0.6829%" height="15" fill="rgb(247,86,24)" fg:x="3902" fg:w="48"/><text x="55.7629%" y="319.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (17 samples, 0.24%)</title><rect x="55.9539%" y="293" width="0.2419%" height="15" fill="rgb(205,101,16)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="303.50"></text></g><g><title>ntdll`RtlTryAcquirePebLock (17 samples, 0.24%)</title><rect x="55.9539%" y="277" width="0.2419%" height="15" fill="rgb(246,168,33)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (17 samples, 0.24%)</title><rect x="55.9539%" y="261" width="0.2419%" height="15" fill="rgb(231,114,1)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="271.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (17 samples, 0.24%)</title><rect x="55.9539%" y="245" width="0.2419%" height="15" fill="rgb(207,184,53)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="255.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (17 samples, 0.24%)</title><rect x="55.9539%" y="229" width="0.2419%" height="15" fill="rgb(224,95,51)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (17 samples, 0.24%)</title><rect x="55.9539%" y="213" width="0.2419%" height="15" fill="rgb(212,188,45)" fg:x="3933" fg:w="17"/><text x="56.2039%" y="223.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (16 samples, 0.23%)</title><rect x="55.9681%" y="197" width="0.2276%" height="15" fill="rgb(223,154,38)" fg:x="3934" fg:w="16"/><text x="56.2181%" y="207.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (14 samples, 0.20%)</title><rect x="55.9966%" y="181" width="0.1992%" height="15" fill="rgb(251,22,52)" fg:x="3936" fg:w="14"/><text x="56.2466%" y="191.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (14 samples, 0.20%)</title><rect x="55.9966%" y="165" width="0.1992%" height="15" fill="rgb(229,209,22)" fg:x="3936" fg:w="14"/><text x="56.2466%" y="175.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (14 samples, 0.20%)</title><rect x="55.9966%" y="149" width="0.1992%" height="15" fill="rgb(234,138,34)" fg:x="3936" fg:w="14"/><text x="56.2466%" y="159.50"></text></g><g><title>ntdll`RtlFreeHeap (93 samples, 1.32%)</title><rect x="55.4986%" y="325" width="1.3231%" height="15" fill="rgb(212,95,11)" fg:x="3901" fg:w="93"/><text x="55.7486%" y="335.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (44 samples, 0.63%)</title><rect x="56.1958%" y="309" width="0.6260%" height="15" fill="rgb(240,179,47)" fg:x="3950" fg:w="44"/><text x="56.4458%" y="319.50"></text></g><g><title>toy`_rust_dealloc (1 samples, 0.01%)</title><rect x="56.8217%" y="325" width="0.0142%" height="15" fill="rgb(240,163,11)" fg:x="3994" fg:w="1"/><text x="57.0717%" y="335.50"></text></g><g><title>toy`core::ptr::drop_in_place&lt;tuple$&lt;aeg::critical_cycles::IncompleteMinimalCycle&lt;usize,usize&gt;,tuple$ (284 samples, 4.04%)</title><rect x="52.8098%" y="341" width="4.0404%" height="15" fill="rgb(236,37,12)" fg:x="3712" fg:w="284"/><text x="53.0598%" y="351.50">toy`..</text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="56.8360%" y="325" width="0.0142%" height="15" fill="rgb(232,164,16)" fg:x="3995" fg:w="1"/><text x="57.0860%" y="335.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="57.2201%" y="325" width="0.0142%" height="15" fill="rgb(244,205,15)" fg:x="4022" fg:w="1"/><text x="57.4701%" y="335.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="57.2201%" y="309" width="0.0142%" height="15" fill="rgb(223,117,47)" fg:x="4022" fg:w="1"/><text x="57.4701%" y="319.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="57.2201%" y="293" width="0.0142%" height="15" fill="rgb(244,107,35)" fg:x="4022" fg:w="1"/><text x="57.4701%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="57.2201%" y="277" width="0.0142%" height="15" fill="rgb(205,140,8)" fg:x="4022" fg:w="1"/><text x="57.4701%" y="287.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.01%)</title><rect x="57.2201%" y="261" width="0.0142%" height="15" fill="rgb(228,84,46)" fg:x="4022" fg:w="1"/><text x="57.4701%" y="271.50"></text></g><g><title>toy`hashbrown::raw::inner::RawTable&lt;tuple$&lt;aeg::critical_cycles::IncompleteMinimalCycle&lt;usize,usize&gt;,tuple$&lt;&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::reserve_rehash&lt;tuple$&lt;aeg::critical_cycles::IncompleteMinimalCycle&lt;usize,usize&gt;,tuple$&lt;&gt; &gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::make_hasher::closure_env$0&lt;aeg::critical_cycles::IncompleteMinimalCycle&lt;usize,usize&gt;,tuple$&lt;&gt;,core::hash::BuildHasherDefault (28 samples, 0.40%)</title><rect x="56.8502%" y="341" width="0.3983%" height="15" fill="rgb(254,188,9)" fg:x="3996" fg:w="28"/><text x="57.1002%" y="351.50"></text></g><g><title>toy`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (1 samples, 0.01%)</title><rect x="57.2343%" y="325" width="0.0142%" height="15" fill="rgb(206,112,54)" fg:x="4023" fg:w="1"/><text x="57.4843%" y="335.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="57.2343%" y="309" width="0.0142%" height="15" fill="rgb(216,84,49)" fg:x="4023" fg:w="1"/><text x="57.4843%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="57.2343%" y="293" width="0.0142%" height="15" fill="rgb(214,194,35)" fg:x="4023" fg:w="1"/><text x="57.4843%" y="303.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (4 samples, 0.06%)</title><rect x="84.4075%" y="293" width="0.0569%" height="15" fill="rgb(249,28,3)" fg:x="5933" fg:w="4"/><text x="84.6575%" y="303.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListResume (1 samples, 0.01%)</title><rect x="84.4644%" y="293" width="0.0142%" height="15" fill="rgb(222,56,52)" fg:x="5937" fg:w="1"/><text x="84.7144%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (9 samples, 0.13%)</title><rect x="86.7406%" y="277" width="0.1280%" height="15" fill="rgb(245,217,50)" fg:x="6097" fg:w="9"/><text x="86.9906%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (170 samples, 2.42%)</title><rect x="84.4786%" y="293" width="2.4186%" height="15" fill="rgb(213,201,24)" fg:x="5938" fg:w="170"/><text x="84.7286%" y="303.50">nt..</text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="86.8687%" y="277" width="0.0285%" height="15" fill="rgb(248,116,28)" fg:x="6106" fg:w="2"/><text x="87.1187%" y="287.50"></text></g><g><title>ntdll`ExpInterlockedPopEntrySListEnd (1 samples, 0.01%)</title><rect x="86.9256%" y="277" width="0.0142%" height="15" fill="rgb(219,72,43)" fg:x="6110" fg:w="1"/><text x="87.1756%" y="287.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.01%)</title><rect x="86.9398%" y="261" width="0.0142%" height="15" fill="rgb(209,138,14)" fg:x="6111" fg:w="1"/><text x="87.1898%" y="271.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (6 samples, 0.09%)</title><rect x="87.1248%" y="213" width="0.0854%" height="15" fill="rgb(222,18,33)" fg:x="6124" fg:w="6"/><text x="87.3748%" y="223.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (25 samples, 0.36%)</title><rect x="86.8971%" y="293" width="0.3557%" height="15" fill="rgb(213,199,7)" fg:x="6108" fg:w="25"/><text x="87.1471%" y="303.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (22 samples, 0.31%)</title><rect x="86.9398%" y="277" width="0.3130%" height="15" fill="rgb(250,110,10)" fg:x="6111" fg:w="22"/><text x="87.1898%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (21 samples, 0.30%)</title><rect x="86.9540%" y="261" width="0.2988%" height="15" fill="rgb(248,123,6)" fg:x="6112" fg:w="21"/><text x="87.2040%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (21 samples, 0.30%)</title><rect x="86.9540%" y="245" width="0.2988%" height="15" fill="rgb(206,91,31)" fg:x="6112" fg:w="21"/><text x="87.2040%" y="255.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (10 samples, 0.14%)</title><rect x="87.1105%" y="229" width="0.1423%" height="15" fill="rgb(211,154,13)" fg:x="6123" fg:w="10"/><text x="87.3605%" y="239.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.04%)</title><rect x="87.2101%" y="213" width="0.0427%" height="15" fill="rgb(225,148,7)" fg:x="6130" fg:w="3"/><text x="87.4601%" y="223.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (3 samples, 0.04%)</title><rect x="87.2101%" y="197" width="0.0427%" height="15" fill="rgb(220,160,43)" fg:x="6130" fg:w="3"/><text x="87.4601%" y="207.50"></text></g><g><title>ntdll`RtlLookupElementGenericTableAvl (1 samples, 0.01%)</title><rect x="87.2528%" y="293" width="0.0142%" height="15" fill="rgb(213,52,39)" fg:x="6133" fg:w="1"/><text x="87.5028%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1,103 samples, 15.69%)</title><rect x="73.5667%" y="325" width="15.6921%" height="15" fill="rgb(243,137,7)" fg:x="5171" fg:w="1103"/><text x="73.8167%" y="335.50">ntdll`RtlAllocateHeap</text></g><g><title>ntdll`RtlAllocateHeap (894 samples, 12.72%)</title><rect x="76.5400%" y="309" width="12.7187%" height="15" fill="rgb(230,79,13)" fg:x="5380" fg:w="894"/><text x="76.7900%" y="319.50">ntdll`RtlAllocateHe..</text></g><g><title>ntdll`RtlUnhandledExceptionFilter (140 samples, 1.99%)</title><rect x="87.2670%" y="293" width="1.9917%" height="15" fill="rgb(247,105,23)" fg:x="6134" fg:w="140"/><text x="87.5170%" y="303.50">n..</text></g><g><title>toy`_rust_alloc (1 samples, 0.01%)</title><rect x="89.2588%" y="325" width="0.0142%" height="15" fill="rgb(223,179,41)" fg:x="6274" fg:w="1"/><text x="89.5088%" y="335.50"></text></g><g><title>toy`memcpy (6 samples, 0.09%)</title><rect x="89.2730%" y="325" width="0.0854%" height="15" fill="rgb(218,9,34)" fg:x="6275" fg:w="6"/><text x="89.5230%" y="335.50"></text></g><g><title>toy`smallvec::impl$30::extend&lt;array$&lt;usize,2&gt;,core::iter::adapters::cloned::Cloned&lt;core::slice::iter::Iter (140 samples, 1.99%)</title><rect x="89.3584%" y="325" width="1.9917%" height="15" fill="rgb(222,106,8)" fg:x="6281" fg:w="140"/><text x="89.6084%" y="335.50">t..</text></g><g><title>toy`smallvec::impl$30::extend&lt;array$&lt;usize,3&gt;,core::iter::adapters::cloned::Cloned&lt;core::slice::iter::Iter (167 samples, 2.38%)</title><rect x="91.3501%" y="325" width="2.3759%" height="15" fill="rgb(211,220,0)" fg:x="6421" fg:w="167"/><text x="91.6001%" y="335.50">to..</text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (44 samples, 0.63%)</title><rect x="93.7260%" y="325" width="0.6260%" height="15" fill="rgb(229,52,16)" fg:x="6588" fg:w="44"/><text x="93.9760%" y="335.50"></text></g><g><title>vcruntime140`memcpy (2 samples, 0.03%)</title><rect x="94.3520%" y="325" width="0.0285%" height="15" fill="rgb(212,155,18)" fg:x="6632" fg:w="2"/><text x="94.6020%" y="335.50"></text></g><g><title>toy`hashbrown::raw::inner::impl$13::clone&lt;tuple$&lt;usize,smallvec::SmallVec&lt;array$ (2,663 samples, 37.89%)</title><rect x="57.2485%" y="341" width="37.8859%" height="15" fill="rgb(242,21,14)" fg:x="4024" fg:w="2663"/><text x="57.4985%" y="351.50">toy`hashbrown::raw::inner::impl$13::clone&lt;tuple$&lt;usize,smallve..</text></g><g><title>vcruntime140`memmove (53 samples, 0.75%)</title><rect x="94.3804%" y="325" width="0.7540%" height="15" fill="rgb(222,19,48)" fg:x="6634" fg:w="53"/><text x="94.6304%" y="335.50"></text></g><g><title>toy`memcpy (3 samples, 0.04%)</title><rect x="95.1344%" y="341" width="0.0427%" height="15" fill="rgb(232,45,27)" fg:x="6687" fg:w="3"/><text x="95.3844%" y="351.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="96.0734%" y="325" width="0.0142%" height="15" fill="rgb(249,103,42)" fg:x="6753" fg:w="1"/><text x="96.3234%" y="335.50"></text></g><g><title>ntdll`RtlCopyMemory (3 samples, 0.04%)</title><rect x="96.0876%" y="309" width="0.0427%" height="15" fill="rgb(246,81,33)" fg:x="6754" fg:w="3"/><text x="96.3376%" y="319.50"></text></g><g><title>ntdll`RtlFreeHeap (4 samples, 0.06%)</title><rect x="96.0876%" y="325" width="0.0569%" height="15" fill="rgb(252,33,42)" fg:x="6754" fg:w="4"/><text x="96.3376%" y="335.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="96.1303%" y="309" width="0.0142%" height="15" fill="rgb(209,212,41)" fg:x="6757" fg:w="1"/><text x="96.3803%" y="319.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="96.1303%" y="293" width="0.0142%" height="15" fill="rgb(207,154,6)" fg:x="6757" fg:w="1"/><text x="96.3803%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="96.1303%" y="277" width="0.0142%" height="15" fill="rgb(223,64,47)" fg:x="6757" fg:w="1"/><text x="96.3803%" y="287.50"></text></g><g><title>toy`alloc::collections::binary_heap::BinaryHeap&lt;petgraph::scored::MinScored&lt;i32,petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,alloc::alloc::Global&gt;::pop&lt;petgraph::scored::MinScored&lt;i32,petgraph::graph_impl::NodeIndex (7 samples, 0.10%)</title><rect x="96.1445%" y="325" width="0.0996%" height="15" fill="rgb(211,161,38)" fg:x="6758" fg:w="7"/><text x="96.3945%" y="335.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.03%)</title><rect x="96.2726%" y="245" width="0.0285%" height="15" fill="rgb(219,138,40)" fg:x="6767" fg:w="2"/><text x="96.5226%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.03%)</title><rect x="96.2726%" y="229" width="0.0285%" height="15" fill="rgb(241,228,46)" fg:x="6767" fg:w="2"/><text x="96.5226%" y="239.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="96.2868%" y="213" width="0.0142%" height="15" fill="rgb(223,209,38)" fg:x="6768" fg:w="1"/><text x="96.5368%" y="223.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::graph_impl::NodeIndex (7 samples, 0.10%)</title><rect x="96.2441%" y="325" width="0.0996%" height="15" fill="rgb(236,164,45)" fg:x="6765" fg:w="7"/><text x="96.4941%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (6 samples, 0.09%)</title><rect x="96.2584%" y="309" width="0.0854%" height="15" fill="rgb(231,15,5)" fg:x="6766" fg:w="6"/><text x="96.5084%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.09%)</title><rect x="96.2584%" y="293" width="0.0854%" height="15" fill="rgb(252,35,15)" fg:x="6766" fg:w="6"/><text x="96.5084%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.09%)</title><rect x="96.2584%" y="277" width="0.0854%" height="15" fill="rgb(248,181,18)" fg:x="6766" fg:w="6"/><text x="96.5084%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (6 samples, 0.09%)</title><rect x="96.2584%" y="261" width="0.0854%" height="15" fill="rgb(233,39,42)" fg:x="6766" fg:w="6"/><text x="96.5084%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (3 samples, 0.04%)</title><rect x="96.3010%" y="245" width="0.0427%" height="15" fill="rgb(238,110,33)" fg:x="6769" fg:w="3"/><text x="96.5510%" y="255.50"></text></g><g><title>ntdll`RtlCopyMemory (3 samples, 0.04%)</title><rect x="96.3010%" y="229" width="0.0427%" height="15" fill="rgb(233,195,10)" fg:x="6769" fg:w="3"/><text x="96.5510%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="96.3722%" y="293" width="0.0142%" height="15" fill="rgb(254,105,3)" fg:x="6774" fg:w="1"/><text x="96.6222%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="96.3722%" y="277" width="0.0142%" height="15" fill="rgb(221,225,9)" fg:x="6774" fg:w="1"/><text x="96.6222%" y="287.50"></text></g><g><title>ntdll`RtlAllocateHeap (4 samples, 0.06%)</title><rect x="96.4149%" y="245" width="0.0569%" height="15" fill="rgb(224,227,45)" fg:x="6777" fg:w="4"/><text x="96.6649%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (3 samples, 0.04%)</title><rect x="96.4291%" y="229" width="0.0427%" height="15" fill="rgb(229,198,43)" fg:x="6778" fg:w="3"/><text x="96.6791%" y="239.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="96.4575%" y="213" width="0.0142%" height="15" fill="rgb(206,209,35)" fg:x="6780" fg:w="1"/><text x="96.7075%" y="223.50"></text></g><g><title>toy`alloc::raw_vec::RawVec&lt;petgraph::scored::MinScored&lt;i32,petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;petgraph::scored::MinScored&lt;i32,petgraph::graph_impl::NodeIndex (11 samples, 0.16%)</title><rect x="96.3437%" y="325" width="0.1565%" height="15" fill="rgb(245,195,53)" fg:x="6772" fg:w="11"/><text x="96.5937%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (10 samples, 0.14%)</title><rect x="96.3579%" y="309" width="0.1423%" height="15" fill="rgb(240,92,26)" fg:x="6773" fg:w="10"/><text x="96.6079%" y="319.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.11%)</title><rect x="96.3864%" y="293" width="0.1138%" height="15" fill="rgb(207,40,23)" fg:x="6775" fg:w="8"/><text x="96.6364%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (8 samples, 0.11%)</title><rect x="96.3864%" y="277" width="0.1138%" height="15" fill="rgb(223,111,35)" fg:x="6775" fg:w="8"/><text x="96.6364%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (7 samples, 0.10%)</title><rect x="96.4006%" y="261" width="0.0996%" height="15" fill="rgb(229,147,28)" fg:x="6776" fg:w="7"/><text x="96.6506%" y="271.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.03%)</title><rect x="96.4718%" y="245" width="0.0285%" height="15" fill="rgb(211,29,28)" fg:x="6781" fg:w="2"/><text x="96.7218%" y="255.50"></text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="96.4718%" y="229" width="0.0285%" height="15" fill="rgb(228,72,33)" fg:x="6781" fg:w="2"/><text x="96.7218%" y="239.50"></text></g><g><title>toy`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;petgraph::graph_impl::NodeIndex (12 samples, 0.17%)</title><rect x="96.5002%" y="325" width="0.1707%" height="15" fill="rgb(205,214,31)" fg:x="6783" fg:w="12"/><text x="96.7502%" y="335.50"></text></g><g><title>toy`core::hash::sip::impl$5::write (1 samples, 0.01%)</title><rect x="96.6567%" y="309" width="0.0142%" height="15" fill="rgb(224,111,15)" fg:x="6794" fg:w="1"/><text x="96.9067%" y="319.50"></text></g><g><title>toy`core::hash::sip::impl$5::write (4 samples, 0.06%)</title><rect x="96.6709%" y="325" width="0.0569%" height="15" fill="rgb(253,21,26)" fg:x="6795" fg:w="4"/><text x="96.9209%" y="335.50"></text></g><g><title>toy`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;petgraph::graph_impl::NodeIndex (18 samples, 0.26%)</title><rect x="96.9128%" y="309" width="0.2561%" height="15" fill="rgb(245,139,43)" fg:x="6812" fg:w="18"/><text x="97.1628%" y="319.50"></text></g><g><title>toy`core::hash::sip::impl$5::write (3 samples, 0.04%)</title><rect x="97.1262%" y="293" width="0.0427%" height="15" fill="rgb(252,170,7)" fg:x="6827" fg:w="3"/><text x="97.3762%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.03%)</title><rect x="97.3965%" y="261" width="0.0285%" height="15" fill="rgb(231,118,14)" fg:x="6846" fg:w="2"/><text x="97.6465%" y="271.50"></text></g><g><title>ntdll`RtlEnumerateGenericTableWithoutSplayingAvl (1 samples, 0.01%)</title><rect x="97.4250%" y="261" width="0.0142%" height="15" fill="rgb(238,83,0)" fg:x="6848" fg:w="1"/><text x="97.6750%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (15 samples, 0.21%)</title><rect x="97.2542%" y="293" width="0.2134%" height="15" fill="rgb(221,39,39)" fg:x="6836" fg:w="15"/><text x="97.5042%" y="303.50"></text></g><g><title>ntdll`RtlAllocateHeap (14 samples, 0.20%)</title><rect x="97.2685%" y="277" width="0.1992%" height="15" fill="rgb(222,119,46)" fg:x="6837" fg:w="14"/><text x="97.5185%" y="287.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (2 samples, 0.03%)</title><rect x="97.4392%" y="261" width="0.0285%" height="15" fill="rgb(222,165,49)" fg:x="6849" fg:w="2"/><text x="97.6892%" y="271.50"></text></g><g><title>ntdll`RtlCopyMemory (1 samples, 0.01%)</title><rect x="97.4676%" y="277" width="0.0142%" height="15" fill="rgb(219,113,52)" fg:x="6851" fg:w="1"/><text x="97.7176%" y="287.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.03%)</title><rect x="97.4676%" y="293" width="0.0285%" height="15" fill="rgb(214,7,15)" fg:x="6851" fg:w="2"/><text x="97.7176%" y="303.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="97.4819%" y="277" width="0.0142%" height="15" fill="rgb(235,32,4)" fg:x="6852" fg:w="1"/><text x="97.7319%" y="287.50"></text></g><g><title>ntdll`RtlDeleteBoundaryDescriptor (1 samples, 0.01%)</title><rect x="97.4819%" y="261" width="0.0142%" height="15" fill="rgb(238,90,54)" fg:x="6852" fg:w="1"/><text x="97.7319%" y="271.50"></text></g><g><title>toy`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;petgraph::graph_impl::NodeIndex (16 samples, 0.23%)</title><rect x="97.4961%" y="293" width="0.2276%" height="15" fill="rgb(213,208,19)" fg:x="6853" fg:w="16"/><text x="97.7461%" y="303.50"></text></g><g><title>toy`core::hash::sip::impl$5::write (2 samples, 0.03%)</title><rect x="97.6953%" y="277" width="0.0285%" height="15" fill="rgb(233,156,4)" fg:x="6867" fg:w="2"/><text x="97.9453%" y="287.50"></text></g><g><title>toy`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i32,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;petgraph::graph_impl::NodeIndex (71 samples, 1.01%)</title><rect x="96.7278%" y="325" width="1.0101%" height="15" fill="rgb(207,194,5)" fg:x="6799" fg:w="71"/><text x="96.9778%" y="335.50"></text></g><g><title>toy`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i32&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i32&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (40 samples, 0.57%)</title><rect x="97.1689%" y="309" width="0.5691%" height="15" fill="rgb(206,111,30)" fg:x="6830" fg:w="40"/><text x="97.4189%" y="319.50"></text></g><g><title>vcruntime140`memset (1 samples, 0.01%)</title><rect x="97.7237%" y="293" width="0.0142%" height="15" fill="rgb(243,70,54)" fg:x="6869" fg:w="1"/><text x="97.9737%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="98.3639%" y="277" width="0.0142%" height="15" fill="rgb(242,28,8)" fg:x="6914" fg:w="1"/><text x="98.6139%" y="287.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.01%)</title><rect x="98.3639%" y="261" width="0.0142%" height="15" fill="rgb(219,106,18)" fg:x="6914" fg:w="1"/><text x="98.6139%" y="271.50"></text></g><g><title>ntdll`RtlAllocateHeap (12 samples, 0.17%)</title><rect x="98.2217%" y="309" width="0.1707%" height="15" fill="rgb(244,222,10)" fg:x="6904" fg:w="12"/><text x="98.4717%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (11 samples, 0.16%)</title><rect x="98.2359%" y="293" width="0.1565%" height="15" fill="rgb(236,179,52)" fg:x="6905" fg:w="11"/><text x="98.4859%" y="303.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="98.3781%" y="277" width="0.0142%" height="15" fill="rgb(213,23,39)" fg:x="6915" fg:w="1"/><text x="98.6281%" y="287.50"></text></g><g><title>ntdll`RtlCopyMemory (1 samples, 0.01%)</title><rect x="98.3924%" y="293" width="0.0142%" height="15" fill="rgb(238,48,10)" fg:x="6916" fg:w="1"/><text x="98.6424%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (2 samples, 0.03%)</title><rect x="98.3924%" y="309" width="0.0285%" height="15" fill="rgb(251,196,23)" fg:x="6916" fg:w="2"/><text x="98.6424%" y="319.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.01%)</title><rect x="98.4066%" y="293" width="0.0142%" height="15" fill="rgb(250,152,24)" fg:x="6917" fg:w="1"/><text x="98.6566%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.01%)</title><rect x="98.4066%" y="277" width="0.0142%" height="15" fill="rgb(209,150,17)" fg:x="6917" fg:w="1"/><text x="98.6566%" y="287.50"></text></g><g><title>toy`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;petgraph::graph_impl::NodeIndex (19 samples, 0.27%)</title><rect x="98.4208%" y="309" width="0.2703%" height="15" fill="rgb(234,202,34)" fg:x="6918" fg:w="19"/><text x="98.6708%" y="319.50"></text></g><g><title>toy`core::hash::sip::impl$5::write (2 samples, 0.03%)</title><rect x="98.6627%" y="293" width="0.0285%" height="15" fill="rgb(253,148,53)" fg:x="6935" fg:w="2"/><text x="98.9127%" y="303.50"></text></g><g><title>toy`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i32&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i32&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.97%)</title><rect x="97.7379%" y="325" width="0.9674%" height="15" fill="rgb(218,129,16)" fg:x="6870" fg:w="68"/><text x="97.9879%" y="335.50"></text></g><g><title>vcruntime140`memset (1 samples, 0.01%)</title><rect x="98.6911%" y="309" width="0.0142%" height="15" fill="rgb(216,85,19)" fg:x="6937" fg:w="1"/><text x="98.9411%" y="319.50"></text></g><g><title>toy`petgraph::algo::astar::astar&lt;ref$&lt;petgraph::graph_impl::Graph&lt;enum2$&lt;aeg::aeg::Node&gt;,aeg::aeg::AegEdge,enum2$ (249 samples, 3.54%)</title><rect x="95.1771%" y="341" width="3.5425%" height="15" fill="rgb(235,228,7)" fg:x="6690" fg:w="249"/><text x="95.4271%" y="351.50">toy`..</text></g><g><title>toy`std::hash::random::impl$0::new::KEYS::__getit::__KEY (1 samples, 0.01%)</title><rect x="98.7054%" y="325" width="0.0142%" height="15" fill="rgb(245,175,0)" fg:x="6938" fg:w="1"/><text x="98.9554%" y="335.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_alloc (7 samples, 0.10%)</title><rect x="98.7196%" y="341" width="0.0996%" height="15" fill="rgb(208,168,36)" fg:x="6939" fg:w="7"/><text x="98.9696%" y="351.50"></text></g><g><title>toy`std::alloc::__default_lib_allocator::__rdl_dealloc (23 samples, 0.33%)</title><rect x="98.8192%" y="341" width="0.3272%" height="15" fill="rgb(246,171,24)" fg:x="6946" fg:w="23"/><text x="99.0692%" y="351.50"></text></g><g><title>vcruntime140`memcmp (1 samples, 0.01%)</title><rect x="99.1464%" y="341" width="0.0142%" height="15" fill="rgb(215,142,24)" fg:x="6969" fg:w="1"/><text x="99.3964%" y="351.50"></text></g><g><title>toy`aeg::aeg::AbstractEventGraph::find_critical_cycles (6,938 samples, 98.71%)</title><rect x="0.7682%" y="373" width="98.7054%" height="15" fill="rgb(250,187,7)" fg:x="54" fg:w="6938"/><text x="1.0182%" y="383.50">toy`aeg::aeg::AbstractEventGraph::find_critical_cycles</text></g><g><title>toy`aeg::critical_cycles::critical_cycles (6,938 samples, 98.71%)</title><rect x="0.7682%" y="357" width="98.7054%" height="15" fill="rgb(228,66,33)" fg:x="54" fg:w="6938"/><text x="1.0182%" y="367.50">toy`aeg::critical_cycles::critical_cycles</text></g><g><title>vcruntime140`memmove (22 samples, 0.31%)</title><rect x="99.1606%" y="341" width="0.3130%" height="15" fill="rgb(234,215,21)" fg:x="6970" fg:w="22"/><text x="99.4106%" y="351.50"></text></g><g><title>bcrypt`BCryptDecrypt (1 samples, 0.01%)</title><rect x="99.4878%" y="261" width="0.0142%" height="15" fill="rgb(222,191,20)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="271.50"></text></g><g><title>bcrypt`BCryptDecrypt (1 samples, 0.01%)</title><rect x="99.4878%" y="245" width="0.0142%" height="15" fill="rgb(245,79,54)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="255.50"></text></g><g><title>KernelBase`LoadLibraryExW (1 samples, 0.01%)</title><rect x="99.4878%" y="229" width="0.0142%" height="15" fill="rgb(240,10,37)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="239.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.01%)</title><rect x="99.4878%" y="213" width="0.0142%" height="15" fill="rgb(214,192,32)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="223.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (1 samples, 0.01%)</title><rect x="99.4878%" y="197" width="0.0142%" height="15" fill="rgb(209,36,54)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="207.50"></text></g><g><title>ntdll`RtlImageRvaToSection (1 samples, 0.01%)</title><rect x="99.4878%" y="181" width="0.0142%" height="15" fill="rgb(220,10,11)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="191.50"></text></g><g><title>ntdll`LdrGetDllHandleByMapping (1 samples, 0.01%)</title><rect x="99.4878%" y="165" width="0.0142%" height="15" fill="rgb(221,106,17)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="175.50"></text></g><g><title>ntdll`LdrAddRefDll (1 samples, 0.01%)</title><rect x="99.4878%" y="149" width="0.0142%" height="15" fill="rgb(251,142,44)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="159.50"></text></g><g><title>ntdll`ZwClose (1 samples, 0.01%)</title><rect x="99.4878%" y="133" width="0.0142%" height="15" fill="rgb(238,13,15)" fg:x="6993" fg:w="1"/><text x="99.7378%" y="143.50"></text></g><g><title>toy`aeg::aeg::AbstractEventGraph::with_config (3 samples, 0.04%)</title><rect x="99.4736%" y="373" width="0.0427%" height="15" fill="rgb(208,107,27)" fg:x="6992" fg:w="3"/><text x="99.7236%" y="383.50"></text></g><g><title>toy`aeg::aeg::create_aeg (3 samples, 0.04%)</title><rect x="99.4736%" y="357" width="0.0427%" height="15" fill="rgb(205,136,37)" fg:x="6992" fg:w="3"/><text x="99.7236%" y="367.50"></text></g><g><title>toy`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.03%)</title><rect x="99.4878%" y="341" width="0.0285%" height="15" fill="rgb(250,205,27)" fg:x="6993" fg:w="2"/><text x="99.7378%" y="351.50"></text></g><g><title>toy`std::sys::windows::rand::hashmap_random_keys (2 samples, 0.03%)</title><rect x="99.4878%" y="325" width="0.0285%" height="15" fill="rgb(210,80,43)" fg:x="6993" fg:w="2"/><text x="99.7378%" y="335.50"></text></g><g><title>bcrypt`BCryptGenRandom (2 samples, 0.03%)</title><rect x="99.4878%" y="309" width="0.0285%" height="15" fill="rgb(247,160,36)" fg:x="6993" fg:w="2"/><text x="99.7378%" y="319.50"></text></g><g><title>bcrypt`BCryptGenRandom (2 samples, 0.03%)</title><rect x="99.4878%" y="293" width="0.0285%" height="15" fill="rgb(234,13,49)" fg:x="6993" fg:w="2"/><text x="99.7378%" y="303.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (2 samples, 0.03%)</title><rect x="99.4878%" y="277" width="0.0285%" height="15" fill="rgb(234,122,0)" fg:x="6993" fg:w="2"/><text x="99.7378%" y="287.50"></text></g><g><title>bcrypt`BCryptResolveProviders (1 samples, 0.01%)</title><rect x="99.5021%" y="261" width="0.0142%" height="15" fill="rgb(207,146,38)" fg:x="6994" fg:w="1"/><text x="99.7521%" y="271.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.01%)</title><rect x="99.5021%" y="245" width="0.0142%" height="15" fill="rgb(207,177,25)" fg:x="6994" fg:w="1"/><text x="99.7521%" y="255.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.01%)</title><rect x="99.5021%" y="229" width="0.0142%" height="15" fill="rgb(211,178,42)" fg:x="6994" fg:w="1"/><text x="99.7521%" y="239.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.01%)</title><rect x="99.5021%" y="213" width="0.0142%" height="15" fill="rgb(230,69,54)" fg:x="6994" fg:w="1"/><text x="99.7521%" y="223.50"></text></g><g><title>toy`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.01%)</title><rect x="99.5163%" y="373" width="0.0142%" height="15" fill="rgb(214,135,41)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="383.50"></text></g><g><title>toy`clap_builder::builder::command::Command::_do_parse (1 samples, 0.01%)</title><rect x="99.5163%" y="357" width="0.0142%" height="15" fill="rgb(237,67,25)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="367.50"></text></g><g><title>toy`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.01%)</title><rect x="99.5163%" y="341" width="0.0142%" height="15" fill="rgb(222,189,50)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="351.50"></text></g><g><title>toy`clap_builder::builder::command::Command::_build_subcommand (1 samples, 0.01%)</title><rect x="99.5163%" y="325" width="0.0142%" height="15" fill="rgb(245,148,34)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="335.50"></text></g><g><title>toy`alloc::fmt::format::format_inner (1 samples, 0.01%)</title><rect x="99.5163%" y="309" width="0.0142%" height="15" fill="rgb(222,29,6)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="319.50"></text></g><g><title>toy`core::fmt::write (1 samples, 0.01%)</title><rect x="99.5163%" y="293" width="0.0142%" height="15" fill="rgb(221,189,43)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="303.50"></text></g><g><title>toy`core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="99.5163%" y="277" width="0.0142%" height="15" fill="rgb(207,36,27)" fg:x="6995" fg:w="1"/><text x="99.7663%" y="287.50"></text></g><g><title>toy`parser::parse_statement (1 samples, 0.01%)</title><rect x="99.5305%" y="357" width="0.0142%" height="15" fill="rgb(217,90,24)" fg:x="6996" fg:w="1"/><text x="99.7805%" y="367.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.5305%" y="341" width="0.0142%" height="15" fill="rgb(224,66,35)" fg:x="6996" fg:w="1"/><text x="99.7805%" y="351.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.5305%" y="325" width="0.0142%" height="15" fill="rgb(221,13,50)" fg:x="6996" fg:w="1"/><text x="99.7805%" y="335.50"></text></g><g><title>ntdll`RtlUnhandledExceptionFilter (1 samples, 0.01%)</title><rect x="99.5305%" y="309" width="0.0142%" height="15" fill="rgb(236,68,49)" fg:x="6996" fg:w="1"/><text x="99.7805%" y="319.50"></text></g><g><title>toy`parser::impl$1::parse::rules::hidden::skip (1 samples, 0.01%)</title><rect x="99.5447%" y="341" width="0.0142%" height="15" fill="rgb(229,146,28)" fg:x="6997" fg:w="1"/><text x="99.7947%" y="351.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::atomic (1 samples, 0.01%)</title><rect x="99.5447%" y="325" width="0.0142%" height="15" fill="rgb(225,31,38)" fg:x="6997" fg:w="1"/><text x="99.7947%" y="335.50"></text></g><g><title>toy`parser::parse (3 samples, 0.04%)</title><rect x="99.5305%" y="373" width="0.0427%" height="15" fill="rgb(250,208,3)" fg:x="6996" fg:w="3"/><text x="99.7805%" y="383.50"></text></g><g><title>toy`pest::parser_state::state (2 samples, 0.03%)</title><rect x="99.5447%" y="357" width="0.0285%" height="15" fill="rgb(246,54,23)" fg:x="6997" fg:w="2"/><text x="99.7947%" y="367.50"></text></g><g><title>toy`parser::impl$1::parse::rules::visible::program::closure$0::closure$3::closure$0::closure$0::closure$0::closure$0 (1 samples, 0.01%)</title><rect x="99.5590%" y="341" width="0.0142%" height="15" fill="rgb(243,76,11)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="351.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="325" width="0.0142%" height="15" fill="rgb(245,21,50)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="335.50"></text></g><g><title>toy`parser::impl$1::parse::rules::visible::thread::closure$0::closure$0::closure$5::closure$0::closure$0::closure$0::closure$0 (1 samples, 0.01%)</title><rect x="99.5590%" y="309" width="0.0142%" height="15" fill="rgb(228,9,43)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="319.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="293" width="0.0142%" height="15" fill="rgb(208,100,47)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="303.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="277" width="0.0142%" height="15" fill="rgb(232,26,8)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="287.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::repeat (1 samples, 0.01%)</title><rect x="99.5590%" y="261" width="0.0142%" height="15" fill="rgb(216,166,38)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="271.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="245" width="0.0142%" height="15" fill="rgb(251,202,51)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="255.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="229" width="0.0142%" height="15" fill="rgb(254,216,34)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="239.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="213" width="0.0142%" height="15" fill="rgb(251,32,27)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="223.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="197" width="0.0142%" height="15" fill="rgb(208,127,28)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="207.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="181" width="0.0142%" height="15" fill="rgb(224,137,22)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="191.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="165" width="0.0142%" height="15" fill="rgb(254,70,32)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="175.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="149" width="0.0142%" height="15" fill="rgb(229,75,37)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="159.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="133" width="0.0142%" height="15" fill="rgb(252,64,23)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="143.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="117" width="0.0142%" height="15" fill="rgb(232,162,48)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="127.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="101" width="0.0142%" height="15" fill="rgb(246,160,12)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="111.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="85" width="0.0142%" height="15" fill="rgb(247,166,0)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="95.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="69" width="0.0142%" height="15" fill="rgb(249,219,21)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="79.50"></text></g><g><title>toy`pest::parser_state::ParserState&lt;parser::Rule&gt;::rule (1 samples, 0.01%)</title><rect x="99.5590%" y="53" width="0.0142%" height="15" fill="rgb(205,209,3)" fg:x="6998" fg:w="1"/><text x="99.8090%" y="63.50"></text></g><g><title>toy`petgraph::graph_impl::serialization::impl$2::serialize&lt;u32,ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;alloc::vec::Vec (3 samples, 0.04%)</title><rect x="99.6159%" y="325" width="0.0427%" height="15" fill="rgb(243,44,1)" fg:x="7002" fg:w="3"/><text x="99.8659%" y="335.50"></text></g><g><title>vcruntime140`memmove (1 samples, 0.01%)</title><rect x="99.6443%" y="309" width="0.0142%" height="15" fill="rgb(206,159,16)" fg:x="7004" fg:w="1"/><text x="99.8943%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.6728%" y="229" width="0.0142%" height="15" fill="rgb(244,77,30)" fg:x="7006" fg:w="1"/><text x="99.9228%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.01%)</title><rect x="99.6728%" y="213" width="0.0142%" height="15" fill="rgb(218,69,12)" fg:x="7006" fg:w="1"/><text x="99.9228%" y="223.50"></text></g><g><title>toy`serde::ser::Serializer::collect_seq&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,ref$&lt;alloc::vec::Vec (10 samples, 0.14%)</title><rect x="99.5732%" y="373" width="0.1423%" height="15" fill="rgb(212,87,7)" fg:x="6999" fg:w="10"/><text x="99.8232%" y="383.50"></text></g><g><title>toy`aeg::critical_cycles::_::impl$0::serialize&lt;ref_mut$&lt;serde_json::ser::Serializer&lt;ref_mut$&lt;alloc::vec::Vec (10 samples, 0.14%)</title><rect x="99.5732%" y="357" width="0.1423%" height="15" fill="rgb(245,114,25)" fg:x="6999" fg:w="10"/><text x="99.8232%" y="367.50"></text></g><g><title>toy`serde::ser::SerializeMap::serialize_entry&lt;enum2$&lt;serde_json::ser::Compound&lt;ref_mut$&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;,serde_json::ser::CompactFormatter&gt; &gt;,str$,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (10 samples, 0.14%)</title><rect x="99.5732%" y="341" width="0.1423%" height="15" fill="rgb(210,61,42)" fg:x="6999" fg:w="10"/><text x="99.8232%" y="351.50"></text></g><g><title>toy`serde_json::ser::format_escaped_str&lt;ref_mut$&lt;alloc::vec::Vec (4 samples, 0.06%)</title><rect x="99.6586%" y="325" width="0.0569%" height="15" fill="rgb(211,52,33)" fg:x="7005" fg:w="4"/><text x="99.9086%" y="335.50"></text></g><g><title>toy`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="99.6728%" y="309" width="0.0427%" height="15" fill="rgb(234,58,33)" fg:x="7006" fg:w="3"/><text x="99.9228%" y="319.50"></text></g><g><title>toy`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="99.6728%" y="293" width="0.0427%" height="15" fill="rgb(220,115,36)" fg:x="7006" fg:w="3"/><text x="99.9228%" y="303.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.04%)</title><rect x="99.6728%" y="277" width="0.0427%" height="15" fill="rgb(243,153,54)" fg:x="7006" fg:w="3"/><text x="99.9228%" y="287.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.04%)</title><rect x="99.6728%" y="261" width="0.0427%" height="15" fill="rgb(251,47,18)" fg:x="7006" fg:w="3"/><text x="99.9228%" y="271.50"></text></g><g><title>ntdll`RtlReAllocateHeap (3 samples, 0.04%)</title><rect x="99.6728%" y="245" width="0.0427%" height="15" fill="rgb(242,102,42)" fg:x="7006" fg:w="3"/><text x="99.9228%" y="255.50"></text></g><g><title>ntdll`RtlCopyMemory (2 samples, 0.03%)</title><rect x="99.6870%" y="229" width="0.0285%" height="15" fill="rgb(234,31,38)" fg:x="7007" fg:w="2"/><text x="99.9370%" y="239.50"></text></g><g><title>toy`std::fs::read_to_string::inner (1 samples, 0.01%)</title><rect x="99.7155%" y="373" width="0.0142%" height="15" fill="rgb(221,117,51)" fg:x="7009" fg:w="1"/><text x="99.9655%" y="383.50"></text></g><g><title>toy`std::sys::windows::fs::File::open (1 samples, 0.01%)</title><rect x="99.7155%" y="357" width="0.0142%" height="15" fill="rgb(212,20,18)" fg:x="7009" fg:w="1"/><text x="99.9655%" y="367.50"></text></g><g><title>KernelBase`CreateFileW (1 samples, 0.01%)</title><rect x="99.7155%" y="341" width="0.0142%" height="15" fill="rgb(245,133,36)" fg:x="7009" fg:w="1"/><text x="99.9655%" y="351.50"></text></g><g><title>KernelBase`CreateFileW (1 samples, 0.01%)</title><rect x="99.7155%" y="325" width="0.0142%" height="15" fill="rgb(212,6,19)" fg:x="7009" fg:w="1"/><text x="99.9655%" y="335.50"></text></g><g><title>ntdll`NtCreateFile (1 samples, 0.01%)</title><rect x="99.7155%" y="309" width="0.0142%" height="15" fill="rgb(218,1,36)" fg:x="7009" fg:w="1"/><text x="99.9655%" y="319.50"></text></g><g><title>toy`std::io::Write::write_all (1 samples, 0.01%)</title><rect x="99.7297%" y="293" width="0.0142%" height="15" fill="rgb(246,84,54)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="303.50"></text></g><g><title>toy`std::sys::windows::stdio::write (1 samples, 0.01%)</title><rect x="99.7297%" y="277" width="0.0142%" height="15" fill="rgb(242,110,6)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="287.50"></text></g><g><title>KernelBase`GetConsoleMode (1 samples, 0.01%)</title><rect x="99.7297%" y="261" width="0.0142%" height="15" fill="rgb(214,47,5)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="271.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (1 samples, 0.01%)</title><rect x="99.7297%" y="245" width="0.0142%" height="15" fill="rgb(218,159,25)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="255.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (1 samples, 0.01%)</title><rect x="99.7297%" y="229" width="0.0142%" height="15" fill="rgb(215,211,28)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="239.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.01%)</title><rect x="99.7297%" y="213" width="0.0142%" height="15" fill="rgb(238,59,32)" fg:x="7010" fg:w="1"/><text x="99.9797%" y="223.50"></text></g><g><title>KernelBase`GetConsoleMode (5 samples, 0.07%)</title><rect x="99.7439%" y="245" width="0.0711%" height="15" fill="rgb(226,82,3)" fg:x="7011" fg:w="5"/><text x="99.9939%" y="255.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (5 samples, 0.07%)</title><rect x="99.7439%" y="229" width="0.0711%" height="15" fill="rgb(240,164,32)" fg:x="7011" fg:w="5"/><text x="99.9939%" y="239.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (5 samples, 0.07%)</title><rect x="99.7439%" y="213" width="0.0711%" height="15" fill="rgb(232,46,7)" fg:x="7011" fg:w="5"/><text x="99.9939%" y="223.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (4 samples, 0.06%)</title><rect x="99.7581%" y="197" width="0.0569%" height="15" fill="rgb(229,129,53)" fg:x="7012" fg:w="4"/><text x="100.0081%" y="207.50"></text></g><g><title>KernelBase`MultiByteToWideChar (1 samples, 0.01%)</title><rect x="99.8151%" y="229" width="0.0142%" height="15" fill="rgb(234,188,29)" fg:x="7016" fg:w="1"/><text x="100.0651%" y="239.50"></text></g><g><title>ntdll`RtlUTF8ToUnicodeN (1 samples, 0.01%)</title><rect x="99.8151%" y="213" width="0.0142%" height="15" fill="rgb(246,141,4)" fg:x="7016" fg:w="1"/><text x="100.0651%" y="223.50"></text></g><g><title>toy`std::io::stdio::_print (11 samples, 0.16%)</title><rect x="99.7297%" y="373" width="0.1565%" height="15" fill="rgb(229,23,39)" fg:x="7010" fg:w="11"/><text x="99.9797%" y="383.50"></text></g><g><title>toy`std::io::stdio::impl$12::write_fmt (11 samples, 0.16%)</title><rect x="99.7297%" y="357" width="0.1565%" height="15" fill="rgb(206,12,3)" fg:x="7010" fg:w="11"/><text x="99.9797%" y="367.50"></text></g><g><title>toy`core::fmt::write (11 samples, 0.16%)</title><rect x="99.7297%" y="341" width="0.1565%" height="15" fill="rgb(252,226,20)" fg:x="7010" fg:w="11"/><text x="99.9797%" y="351.50"></text></g><g><title>toy`std::io::Write::write_fmt::impl$0::write_str (11 samples, 0.16%)</title><rect x="99.7297%" y="325" width="0.1565%" height="15" fill="rgb(216,123,35)" fg:x="7010" fg:w="11"/><text x="99.9797%" y="335.50"></text></g><g><title>toy`std::io::stdio::impl$13::write_all (11 samples, 0.16%)</title><rect x="99.7297%" y="309" width="0.1565%" height="15" fill="rgb(212,68,40)" fg:x="7010" fg:w="11"/><text x="99.9797%" y="319.50"></text></g><g><title>toy`std::io::buffered::bufwriter::BufWriter::write_all_cold (10 samples, 0.14%)</title><rect x="99.7439%" y="293" width="0.1423%" height="15" fill="rgb(254,125,32)" fg:x="7011" fg:w="10"/><text x="99.9939%" y="303.50"></text></g><g><title>toy`std::io::Write::write_all (10 samples, 0.14%)</title><rect x="99.7439%" y="277" width="0.1423%" height="15" fill="rgb(253,97,22)" fg:x="7011" fg:w="10"/><text x="99.9939%" y="287.50"></text></g><g><title>toy`std::sys::windows::stdio::write (10 samples, 0.14%)</title><rect x="99.7439%" y="261" width="0.1423%" height="15" fill="rgb(241,101,14)" fg:x="7011" fg:w="10"/><text x="99.9939%" y="271.50"></text></g><g><title>toy`std::sys::windows::stdio::write_valid_utf8_to_console (5 samples, 0.07%)</title><rect x="99.8151%" y="245" width="0.0711%" height="15" fill="rgb(238,103,29)" fg:x="7016" fg:w="5"/><text x="100.0651%" y="255.50"></text></g><g><title>KernelBase`WriteConsoleW (4 samples, 0.06%)</title><rect x="99.8293%" y="229" width="0.0569%" height="15" fill="rgb(233,195,47)" fg:x="7017" fg:w="4"/><text x="100.0793%" y="239.50"></text></g><g><title>KernelBase`WriteConsoleW (4 samples, 0.06%)</title><rect x="99.8293%" y="213" width="0.0569%" height="15" fill="rgb(246,218,30)" fg:x="7017" fg:w="4"/><text x="100.0793%" y="223.50"></text></g><g><title>KernelBase`GetConsoleScreenBufferInfoEx (4 samples, 0.06%)</title><rect x="99.8293%" y="197" width="0.0569%" height="15" fill="rgb(219,145,47)" fg:x="7017" fg:w="4"/><text x="100.0793%" y="207.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (4 samples, 0.06%)</title><rect x="99.8293%" y="181" width="0.0569%" height="15" fill="rgb(243,12,26)" fg:x="7017" fg:w="4"/><text x="100.0793%" y="191.50"></text></g><g><title>toy`main (6,975 samples, 99.23%)</title><rect x="0.6687%" y="453" width="99.2318%" height="15" fill="rgb(214,87,16)" fg:x="47" fg:w="6975"/><text x="0.9187%" y="463.50">toy`main</text></g><g><title>toy`std::rt::lang_start_internal (6,975 samples, 99.23%)</title><rect x="0.6687%" y="437" width="99.2318%" height="15" fill="rgb(208,99,42)" fg:x="47" fg:w="6975"/><text x="0.9187%" y="447.50">toy`std::rt::lang_start_internal</text></g><g><title>toy`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$ (6,975 samples, 99.23%)</title><rect x="0.6687%" y="421" width="99.2318%" height="15" fill="rgb(253,99,2)" fg:x="47" fg:w="6975"/><text x="0.9187%" y="431.50">toy`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$</text></g><g><title>toy`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$ (6,975 samples, 99.23%)</title><rect x="0.6687%" y="405" width="99.2318%" height="15" fill="rgb(220,168,23)" fg:x="47" fg:w="6975"/><text x="0.9187%" y="415.50">toy`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$</text></g><g><title>toy`toy::main (6,975 samples, 99.23%)</title><rect x="0.6687%" y="389" width="99.2318%" height="15" fill="rgb(242,38,24)" fg:x="47" fg:w="6975"/><text x="0.9187%" y="399.50">toy`toy::main</text></g><g><title>toy`toy::impl$6::command (1 samples, 0.01%)</title><rect x="99.8862%" y="373" width="0.0142%" height="15" fill="rgb(225,182,9)" fg:x="7021" fg:w="1"/><text x="100.1362%" y="383.50"></text></g><g><title>toy`clap_builder::builder::resettable::impl$8::into_resettable (1 samples, 0.01%)</title><rect x="99.8862%" y="357" width="0.0142%" height="15" fill="rgb(243,178,37)" fg:x="7021" fg:w="1"/><text x="100.1362%" y="367.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="99.9004%" y="357" width="0.0142%" height="15" fill="rgb(232,139,19)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="367.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="99.9004%" y="341" width="0.0142%" height="15" fill="rgb(225,201,24)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="351.50"></text></g><g><title>KernelBase`TestCreate (1 samples, 0.01%)</title><rect x="99.9004%" y="325" width="0.0142%" height="15" fill="rgb(221,47,46)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="335.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="99.9004%" y="309" width="0.0142%" height="15" fill="rgb(249,23,13)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="319.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="99.9004%" y="293" width="0.0142%" height="15" fill="rgb(219,9,5)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="303.50"></text></g><g><title>KernelBase`time (1 samples, 0.01%)</title><rect x="99.9004%" y="277" width="0.0142%" height="15" fill="rgb(254,171,16)" fg:x="7022" fg:w="1"/><text x="100.1504%" y="287.50"></text></g><g><title>kernel32`ExitProcess (2 samples, 0.03%)</title><rect x="99.9004%" y="421" width="0.0285%" height="15" fill="rgb(230,171,20)" fg:x="7022" fg:w="2"/><text x="100.1504%" y="431.50"></text></g><g><title>ntdll`RtlExitUserProcess (2 samples, 0.03%)</title><rect x="99.9004%" y="405" width="0.0285%" height="15" fill="rgb(210,71,41)" fg:x="7022" fg:w="2"/><text x="100.1504%" y="415.50"></text></g><g><title>ntdll`LdrShutdownProcess (2 samples, 0.03%)</title><rect x="99.9004%" y="389" width="0.0285%" height="15" fill="rgb(206,173,20)" fg:x="7022" fg:w="2"/><text x="100.1504%" y="399.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 0.03%)</title><rect x="99.9004%" y="373" width="0.0285%" height="15" fill="rgb(233,88,34)" fg:x="7022" fg:w="2"/><text x="100.1504%" y="383.50"></text></g><g><title>bcryptprimitives`ProcessPrngGuid (1 samples, 0.01%)</title><rect x="99.9146%" y="357" width="0.0142%" height="15" fill="rgb(223,209,46)" fg:x="7023" fg:w="1"/><text x="100.1646%" y="367.50"></text></g><g><title>bcryptprimitives`ProcessPrngGuid (1 samples, 0.01%)</title><rect x="99.9146%" y="341" width="0.0142%" height="15" fill="rgb(250,43,18)" fg:x="7023" fg:w="1"/><text x="100.1646%" y="351.50"></text></g><g><title>ntdll`LdrLoadDll (1 samples, 0.01%)</title><rect x="99.9289%" y="293" width="0.0142%" height="15" fill="rgb(208,13,10)" fg:x="7024" fg:w="1"/><text x="100.1789%" y="303.50"></text></g><g><title>ntdll`RtlAddressInSectionTable (1 samples, 0.01%)</title><rect x="99.9289%" y="277" width="0.0142%" height="15" fill="rgb(212,200,36)" fg:x="7024" fg:w="1"/><text x="100.1789%" y="287.50"></text></g><g><title>ntdll`ZwQueryAttributesFile (1 samples, 0.01%)</title><rect x="99.9289%" y="261" width="0.0142%" height="15" fill="rgb(225,90,30)" fg:x="7024" fg:w="1"/><text x="100.1789%" y="271.50"></text></g><g><title>ntdll`LdrpResGetMappingSize (1 samples, 0.01%)</title><rect x="99.9431%" y="245" width="0.0142%" height="15" fill="rgb(236,182,39)" fg:x="7025" fg:w="1"/><text x="100.1931%" y="255.50"></text></g><g><title>ntdll`LdrControlFlowGuardEnforced (2 samples, 0.03%)</title><rect x="99.9431%" y="277" width="0.0285%" height="15" fill="rgb(212,144,35)" fg:x="7025" fg:w="2"/><text x="100.1931%" y="287.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (2 samples, 0.03%)</title><rect x="99.9431%" y="261" width="0.0285%" height="15" fill="rgb(228,63,44)" fg:x="7025" fg:w="2"/><text x="100.1931%" y="271.50"></text></g><g><title>ntdll`RtlFlsFree (1 samples, 0.01%)</title><rect x="99.9573%" y="245" width="0.0142%" height="15" fill="rgb(228,109,6)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="255.50"></text></g><g><title>kernel32`QuirkIsEnabled3Worker (1 samples, 0.01%)</title><rect x="99.9573%" y="229" width="0.0142%" height="15" fill="rgb(238,117,24)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="239.50"></text></g><g><title>ntdll`LdrResFindResourceDirectory (1 samples, 0.01%)</title><rect x="99.9573%" y="213" width="0.0142%" height="15" fill="rgb(242,26,26)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="223.50"></text></g><g><title>ntdll`LdrResSearchResource (1 samples, 0.01%)</title><rect x="99.9573%" y="197" width="0.0142%" height="15" fill="rgb(221,92,48)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="207.50"></text></g><g><title>ntdll`LdrResSearchResource (1 samples, 0.01%)</title><rect x="99.9573%" y="181" width="0.0142%" height="15" fill="rgb(209,209,32)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="191.50"></text></g><g><title>ntdll`LdrpResGetResourceDirectory (1 samples, 0.01%)</title><rect x="99.9573%" y="165" width="0.0142%" height="15" fill="rgb(221,70,22)" fg:x="7026" fg:w="1"/><text x="100.2073%" y="175.50"></text></g><g><title>ucrtbase`exit (6 samples, 0.09%)</title><rect x="99.9004%" y="453" width="0.0854%" height="15" fill="rgb(248,145,5)" fg:x="7022" fg:w="6"/><text x="100.1504%" y="463.50"></text></g><g><title>ucrtbase`exit (6 samples, 0.09%)</title><rect x="99.9004%" y="437" width="0.0854%" height="15" fill="rgb(226,116,26)" fg:x="7022" fg:w="6"/><text x="100.1504%" y="447.50"></text></g><g><title>ucrtbase`mbsicmp_l (4 samples, 0.06%)</title><rect x="99.9289%" y="421" width="0.0569%" height="15" fill="rgb(244,5,17)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="431.50"></text></g><g><title>ucrtbase`o_iswascii (4 samples, 0.06%)</title><rect x="99.9289%" y="405" width="0.0569%" height="15" fill="rgb(252,159,33)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="415.50"></text></g><g><title>KernelBase`LoadLibraryExW (4 samples, 0.06%)</title><rect x="99.9289%" y="389" width="0.0569%" height="15" fill="rgb(206,71,0)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="399.50"></text></g><g><title>ntdll`LdrLoadDll (4 samples, 0.06%)</title><rect x="99.9289%" y="373" width="0.0569%" height="15" fill="rgb(233,118,54)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="383.50"></text></g><g><title>ntdll`RtlUnicodeToCustomCPN (4 samples, 0.06%)</title><rect x="99.9289%" y="357" width="0.0569%" height="15" fill="rgb(234,83,48)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="367.50"></text></g><g><title>ntdll`RtlImageRvaToSection (4 samples, 0.06%)</title><rect x="99.9289%" y="341" width="0.0569%" height="15" fill="rgb(228,3,54)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="351.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.06%)</title><rect x="99.9289%" y="325" width="0.0569%" height="15" fill="rgb(226,155,13)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="335.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (4 samples, 0.06%)</title><rect x="99.9289%" y="309" width="0.0569%" height="15" fill="rgb(241,28,37)" fg:x="7024" fg:w="4"/><text x="100.1789%" y="319.50"></text></g><g><title>ntdll`RtlQueryPerformanceCounter (3 samples, 0.04%)</title><rect x="99.9431%" y="293" width="0.0427%" height="15" fill="rgb(233,93,10)" fg:x="7025" fg:w="3"/><text x="100.1931%" y="303.50"></text></g><g><title>ntdll`NtOpenFile (1 samples, 0.01%)</title><rect x="99.9715%" y="277" width="0.0142%" height="15" fill="rgb(225,113,19)" fg:x="7027" fg:w="1"/><text x="100.2215%" y="287.50"></text></g><g><title>all (7,029 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(241,2,18)" fg:x="0" fg:w="7029"/><text x="0.2500%" y="527.50"></text></g><g><title>ntdll`RtlUserThreadStart (6,994 samples, 99.50%)</title><rect x="0.4979%" y="501" width="99.5021%" height="15" fill="rgb(228,207,21)" fg:x="35" fg:w="6994"/><text x="0.7479%" y="511.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (6,992 samples, 99.47%)</title><rect x="0.5264%" y="485" width="99.4736%" height="15" fill="rgb(213,211,35)" fg:x="37" fg:w="6992"/><text x="0.7764%" y="495.50">kernel32`BaseThreadInitThunk</text></g><g><title>toy`__scrt_common_main_seh (6,982 samples, 99.33%)</title><rect x="0.6687%" y="469" width="99.3313%" height="15" fill="rgb(209,83,10)" fg:x="47" fg:w="6982"/><text x="0.9187%" y="479.50">toy`__scrt_common_main_seh</text></g><g><title>ucrtbase`initterm (1 samples, 0.01%)</title><rect x="99.9858%" y="453" width="0.0142%" height="15" fill="rgb(209,164,1)" fg:x="7028" fg:w="1"/><text x="100.2358%" y="463.50"></text></g><g><title>toy`std::sys::windows::compat::init (1 samples, 0.01%)</title><rect x="99.9858%" y="437" width="0.0142%" height="15" fill="rgb(213,184,43)" fg:x="7028" fg:w="1"/><text x="100.2358%" y="447.50"></text></g></svg></svg>